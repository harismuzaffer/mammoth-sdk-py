"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .datasetpatchrequest import DatasetPatchRequest, DatasetPatchRequestTypedDict
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import (
    FieldMetadata,
    PathParamMetadata,
    QueryParamMetadata,
    RequestMetadata,
)
from typing import Any, Dict, List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class UpdateDatasetRequestTypedDict(TypedDict):
    dataset_id: int
    r"""Id of the dataset"""
    dataset_patch_request: DatasetPatchRequestTypedDict
    workspace_id: int
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""
    project_id: int
    r"""Project ID of the workspace"""
    validation_only: NotRequired[bool]
    skip_dependency_validation: NotRequired[bool]


class UpdateDatasetRequest(BaseModel):
    dataset_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Id of the dataset"""

    dataset_patch_request: Annotated[
        DatasetPatchRequest,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]

    workspace_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 2
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""

    project_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 1
    r"""Project ID of the workspace"""

    validation_only: Annotated[
        Optional[bool],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = False

    skip_dependency_validation: Annotated[
        Optional[bool],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = False


UpdateDatasetExtraTypedDict = TypeAliasType(
    "UpdateDatasetExtraTypedDict", Union[Dict[str, Any], List[Any]]
)


UpdateDatasetExtra = TypeAliasType(
    "UpdateDatasetExtra", Union[Dict[str, Any], List[Any]]
)
