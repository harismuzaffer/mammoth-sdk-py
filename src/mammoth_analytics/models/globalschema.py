"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .onboardingschema import OnboardingSchema, OnboardingSchemaTypedDict
from .selfserveschema import SelfServeSchema, SelfServeSchemaTypedDict
from mammoth_analytics.types import (
    BaseModel,
    Nullable,
    OptionalNullable,
    UNSET,
    UNSET_SENTINEL,
)
import pydantic
from pydantic import model_serializer
from typing_extensions import Annotated, NotRequired, TypedDict


class GlobalSchemaTypedDict(TypedDict):
    self_serve: NotRequired[Nullable[SelfServeSchemaTypedDict]]
    r"""Self Serve"""
    onboarding: NotRequired[Nullable[OnboardingSchemaTypedDict]]
    r"""Onboarding"""


class GlobalSchema(BaseModel):
    self_serve: Annotated[
        OptionalNullable[SelfServeSchema], pydantic.Field(alias="SELF_SERVE")
    ] = UNSET
    r"""Self Serve"""

    onboarding: Annotated[
        OptionalNullable[OnboardingSchema], pydantic.Field(alias="ONBOARDING")
    ] = UNSET
    r"""Onboarding"""

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = ["SELF_SERVE", "ONBOARDING"]
        nullable_fields = ["SELF_SERVE", "ONBOARDING"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in type(self).model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
