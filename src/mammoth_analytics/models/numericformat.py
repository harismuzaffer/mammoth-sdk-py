"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from mammoth_analytics.types import BaseModel
from typing import Optional
from typing_extensions import NotRequired, TypedDict


class NumberType(str, Enum):
    r"""The data type of the number (e.g., int, float)."""

    FLOAT = "float"
    INT = "int"


class NumericFormatTypedDict(TypedDict):
    comma_separated: NotRequired[bool]
    r"""Whether to format numbers with commas as thousand separators."""
    currency_symbol: NotRequired[str]
    r"""Symbol to use for currency formatting (empty if not applicable)."""
    decimal_spec: NotRequired[int]
    r"""Number of decimal places to display."""
    enabled: NotRequired[bool]
    r"""Whether numeric formatting is applied."""
    is_percentage: NotRequired[bool]
    r"""Whether the number should be displayed as a percentage."""
    numtype: NotRequired[NumberType]
    r"""The data type of the number (e.g., int, float)."""


class NumericFormat(BaseModel):
    comma_separated: Optional[bool] = False
    r"""Whether to format numbers with commas as thousand separators."""

    currency_symbol: Optional[str] = ""
    r"""Symbol to use for currency formatting (empty if not applicable)."""

    decimal_spec: Optional[int] = 0
    r"""Number of decimal places to display."""

    enabled: Optional[bool] = True
    r"""Whether numeric formatting is applied."""

    is_percentage: Optional[bool] = False
    r"""Whether the number should be displayed as a percentage."""

    numtype: Optional[NumberType] = NumberType.FLOAT
    r"""The data type of the number (e.g., int, float)."""
