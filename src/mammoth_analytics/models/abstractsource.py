"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from mammoth_analytics.types import BaseModel
from typing import Optional
from typing_extensions import NotRequired, TypedDict


class AbstractSourceType(str, Enum):
    r"""Type of the source"""

    FILE = "file"
    SKETCH = "sketch"
    CLOUD = "cloud"
    ABSTRACT = "abstract"
    APPEND = "append"


class AbstractSourceDetailsTypedDict(TypedDict):
    r"""Details of the abstract ds source"""


class AbstractSourceDetails(BaseModel):
    r"""Details of the abstract ds source"""


class AbstractSourceTypedDict(TypedDict):
    details: AbstractSourceDetailsTypedDict
    r"""Details of the abstract ds source"""
    type: NotRequired[AbstractSourceType]
    r"""Type of the source"""


class AbstractSource(BaseModel):
    details: AbstractSourceDetails
    r"""Details of the abstract ds source"""

    type: Optional[AbstractSourceType] = AbstractSourceType.SKETCH
    r"""Type of the source"""
