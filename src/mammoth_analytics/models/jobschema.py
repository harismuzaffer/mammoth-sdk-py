"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from enum import Enum
from mammoth_analytics.types import BaseModel
from typing_extensions import TypedDict


class JobSchemaJobStatus(str, Enum):
    r"""Job status can be success, failure or processing"""

    SUCCESS = "success"
    FAILURE = "failure"
    PROCESSING = "processing"
    ERROR = "error"


class JobSchemaResponseTypedDict(TypedDict):
    r"""Result of async task is stored in response"""


class JobSchemaResponse(BaseModel):
    r"""Result of async task is stored in response"""


class JobSchemaTypedDict(TypedDict):
    id: int
    status: JobSchemaJobStatus
    r"""Job status can be success, failure or processing"""
    response: JobSchemaResponseTypedDict
    r"""Result of async task is stored in response"""
    last_updated_at: datetime
    r"""Job last updated at is the time when Job status was last updated"""
    created_at: datetime
    r"""Create at is time when async task was created"""
    path: str
    r"""API request path of the Job operation"""
    operation: str
    r"""Operation is async task name which Job is tracking"""


class JobSchema(BaseModel):
    id: int

    status: JobSchemaJobStatus
    r"""Job status can be success, failure or processing"""

    response: JobSchemaResponse
    r"""Result of async task is stored in response"""

    last_updated_at: datetime
    r"""Job last updated at is the time when Job status was last updated"""

    created_at: datetime
    r"""Create at is time when async task was created"""

    path: str
    r"""API request path of the Job operation"""

    operation: str
    r"""Operation is async task name which Job is tracking"""
