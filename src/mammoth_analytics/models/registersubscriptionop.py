"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .customerschema import CustomerSchema, CustomerSchemaTypedDict
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing import Any, Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class RegisterSubscriptionRequestTypedDict(TypedDict):
    workspace_id: int
    r"""Id of the workspace to work with"""
    customer_schema: CustomerSchemaTypedDict


class RegisterSubscriptionRequest(BaseModel):
    workspace_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Id of the workspace to work with"""

    customer_schema: Annotated[
        CustomerSchema,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]


RegisterSubscriptionExtraTypedDict = TypeAliasType(
    "RegisterSubscriptionExtraTypedDict", Union[Dict[str, Any], List[Any]]
)


RegisterSubscriptionExtra = TypeAliasType(
    "RegisterSubscriptionExtra", Union[Dict[str, Any], List[Any]]
)
