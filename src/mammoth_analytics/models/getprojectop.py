"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetProjectRequestTypedDict(TypedDict):
    workspace_id: int
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""
    limit: NotRequired[int]
    r"""Max number of projects to return"""
    offset: NotRequired[int]
    r"""Offset from the beginning of the project list"""
    fields: NotRequired[str]
    r"""Fields to be returned in a comma-separated format may include id, name, owner_workspace_id, updated_at."""
    sort: NotRequired[str]
    r"""Returned projects are Sort by this parameter. Can be (id, name, owner_workspace_id, updated_at)"""
    subscribed: NotRequired[str]
    r"""If true, list only subscribed projects otherwise list all projects"""


class GetProjectRequest(BaseModel):
    workspace_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 2
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""

    limit: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 10
    r"""Max number of projects to return"""

    offset: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 0
    r"""Offset from the beginning of the project list"""

    fields: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = "id,name,status,created_at,updated_at,properties"
    r"""Fields to be returned in a comma-separated format may include id, name, owner_workspace_id, updated_at."""

    sort: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = "(id:asc)"
    r"""Returned projects are Sort by this parameter. Can be (id, name, owner_workspace_id, updated_at)"""

    subscribed: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = ""
    r"""If true, list only subscribed projects otherwise list all projects"""
