"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
from typing import Any, Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class DeleteDsConfigsRequestTypedDict(TypedDict):
    connector_key: str
    r"""Encoded key of the connector"""
    connection_key: str
    r"""Encoded key of the connection"""
    config_ids: str
    workspace_id: int
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""
    project_id: int
    r"""Project ID of the workspace"""


class DeleteDsConfigsRequest(BaseModel):
    connector_key: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Encoded key of the connector"""

    connection_key: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Encoded key of the connection"""

    config_ids: Annotated[
        str, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))
    ]

    workspace_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 2
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""

    project_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 1
    r"""Project ID of the workspace"""


DeleteDsConfigsExtra2TypedDict = TypeAliasType(
    "DeleteDsConfigsExtra2TypedDict", Union[Dict[str, Any], List[Any]]
)


DeleteDsConfigsExtra2 = TypeAliasType(
    "DeleteDsConfigsExtra2", Union[Dict[str, Any], List[Any]]
)


DeleteDsConfigsExtra1TypedDict = TypeAliasType(
    "DeleteDsConfigsExtra1TypedDict", Union[Dict[str, Any], List[Any]]
)


DeleteDsConfigsExtra1 = TypeAliasType(
    "DeleteDsConfigsExtra1", Union[Dict[str, Any], List[Any]]
)
