"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
from typing import Any, Dict, List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class DeleteScheduleRequestTypedDict(TypedDict):
    workspace_id: int
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""
    project_id: int
    r"""Project ID of the workspace"""
    schedule_id: int
    r"""Id of the schedule"""
    force: NotRequired[bool]
    r"""Is force delete"""


class DeleteScheduleRequest(BaseModel):
    workspace_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 2
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""

    project_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 1
    r"""Project ID of the workspace"""

    schedule_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 216
    r"""Id of the schedule"""

    force: Annotated[
        Optional[bool],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = False
    r"""Is force delete"""


DeleteScheduleUnauthorizedExtraTypedDict = TypeAliasType(
    "DeleteScheduleUnauthorizedExtraTypedDict", Union[Dict[str, Any], List[Any]]
)


DeleteScheduleUnauthorizedExtra = TypeAliasType(
    "DeleteScheduleUnauthorizedExtra", Union[Dict[str, Any], List[Any]]
)


DeleteScheduleBadRequestExtra2TypedDict = TypeAliasType(
    "DeleteScheduleBadRequestExtra2TypedDict", Union[Dict[str, Any], List[Any]]
)


DeleteScheduleBadRequestExtra2 = TypeAliasType(
    "DeleteScheduleBadRequestExtra2", Union[Dict[str, Any], List[Any]]
)


DeleteScheduleBadRequestExtra1TypedDict = TypeAliasType(
    "DeleteScheduleBadRequestExtra1TypedDict", Union[Dict[str, Any], List[Any]]
)


DeleteScheduleBadRequestExtra1 = TypeAliasType(
    "DeleteScheduleBadRequestExtra1", Union[Dict[str, Any], List[Any]]
)
