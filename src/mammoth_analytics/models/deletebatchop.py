"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import FieldMetadata, PathParamMetadata
from typing import Any, Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class DeleteBatchRequestTypedDict(TypedDict):
    dataset_id: int
    r"""Id of the dataset"""
    batch_id: int
    r"""Id of the dataset"""
    workspace_id: int
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""
    project_id: int
    r"""Project ID of the workspace"""


class DeleteBatchRequest(BaseModel):
    dataset_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Id of the dataset"""

    batch_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Id of the dataset"""

    workspace_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 2
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""

    project_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 1
    r"""Project ID of the workspace"""


DeleteBatchExtra2TypedDict = TypeAliasType(
    "DeleteBatchExtra2TypedDict", Union[Dict[str, Any], List[Any]]
)


DeleteBatchExtra2 = TypeAliasType("DeleteBatchExtra2", Union[Dict[str, Any], List[Any]])


DeleteBatchExtra1TypedDict = TypeAliasType(
    "DeleteBatchExtra1TypedDict", Union[Dict[str, Any], List[Any]]
)


DeleteBatchExtra1 = TypeAliasType("DeleteBatchExtra1", Union[Dict[str, Any], List[Any]])
