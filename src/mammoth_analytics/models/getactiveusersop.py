"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .dataviewactiveusers import DataviewActiveUsers, DataviewActiveUsersTypedDict
from .jobresponse import JobResponse, JobResponseTypedDict
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import FieldMetadata, PathParamMetadata
from typing import Any, Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class GetActiveUsersRequestTypedDict(TypedDict):
    dataset_id: int
    r"""Id of the dataset"""
    workspace_id: int
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""
    project_id: int
    r"""Project ID of the workspace"""
    dataview_id: int
    r"""Dataview ID of the dataset"""


class GetActiveUsersRequest(BaseModel):
    dataset_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Id of the dataset"""

    workspace_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 2
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""

    project_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 1
    r"""Project ID of the workspace"""

    dataview_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 4
    r"""Dataview ID of the dataset"""


GetActiveUsersNotFoundExtraTypedDict = TypeAliasType(
    "GetActiveUsersNotFoundExtraTypedDict", Union[Dict[str, Any], List[Any]]
)


GetActiveUsersNotFoundExtra = TypeAliasType(
    "GetActiveUsersNotFoundExtra", Union[Dict[str, Any], List[Any]]
)


GetActiveUsersUnauthorizedExtraTypedDict = TypeAliasType(
    "GetActiveUsersUnauthorizedExtraTypedDict", Union[Dict[str, Any], List[Any]]
)


GetActiveUsersUnauthorizedExtra = TypeAliasType(
    "GetActiveUsersUnauthorizedExtra", Union[Dict[str, Any], List[Any]]
)


GetActiveUsersBadRequestExtra2TypedDict = TypeAliasType(
    "GetActiveUsersBadRequestExtra2TypedDict", Union[Dict[str, Any], List[Any]]
)


GetActiveUsersBadRequestExtra2 = TypeAliasType(
    "GetActiveUsersBadRequestExtra2", Union[Dict[str, Any], List[Any]]
)


GetActiveUsersBadRequestExtra1TypedDict = TypeAliasType(
    "GetActiveUsersBadRequestExtra1TypedDict", Union[Dict[str, Any], List[Any]]
)


GetActiveUsersBadRequestExtra1 = TypeAliasType(
    "GetActiveUsersBadRequestExtra1", Union[Dict[str, Any], List[Any]]
)


GetActiveUsersResponseTypedDict = TypeAliasType(
    "GetActiveUsersResponseTypedDict",
    Union[DataviewActiveUsersTypedDict, JobResponseTypedDict],
)


GetActiveUsersResponse = TypeAliasType(
    "GetActiveUsersResponse", Union[DataviewActiveUsers, JobResponse]
)
