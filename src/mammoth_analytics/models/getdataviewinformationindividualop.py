"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .dataviewinfo import DataviewInfo, DataviewInfoTypedDict
from .jobresponse import JobResponse, JobResponseTypedDict
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
from typing import Any, Dict, List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class GetDataviewInformationIndividualRequestTypedDict(TypedDict):
    dataset_id: int
    r"""Id of the dataset"""
    workspace_id: int
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""
    project_id: int
    r"""Project ID of the workspace"""
    dataview_id: int
    r"""Dataview ID of the dataset"""
    fields: NotRequired[str]
    r"""Fields to be returned in a comma-separated format. Check full mode for all fields."""
    sequence: NotRequired[int]
    r"""Sequence number of the dataview task"""


class GetDataviewInformationIndividualRequest(BaseModel):
    dataset_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Id of the dataset"""

    workspace_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 2
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""

    project_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 1
    r"""Project ID of the workspace"""

    dataview_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 4
    r"""Dataview ID of the dataset"""

    fields: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = "__standard"
    r"""Fields to be returned in a comma-separated format. Check full mode for all fields."""

    sequence: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 0
    r"""Sequence number of the dataview task"""


GetDataviewInformationIndividualNotFoundExtraTypedDict = TypeAliasType(
    "GetDataviewInformationIndividualNotFoundExtraTypedDict",
    Union[Dict[str, Any], List[Any]],
)


GetDataviewInformationIndividualNotFoundExtra = TypeAliasType(
    "GetDataviewInformationIndividualNotFoundExtra", Union[Dict[str, Any], List[Any]]
)


GetDataviewInformationIndividualUnauthorizedExtraTypedDict = TypeAliasType(
    "GetDataviewInformationIndividualUnauthorizedExtraTypedDict",
    Union[Dict[str, Any], List[Any]],
)


GetDataviewInformationIndividualUnauthorizedExtra = TypeAliasType(
    "GetDataviewInformationIndividualUnauthorizedExtra",
    Union[Dict[str, Any], List[Any]],
)


GetDataviewInformationIndividualBadRequestExtra2TypedDict = TypeAliasType(
    "GetDataviewInformationIndividualBadRequestExtra2TypedDict",
    Union[Dict[str, Any], List[Any]],
)


GetDataviewInformationIndividualBadRequestExtra2 = TypeAliasType(
    "GetDataviewInformationIndividualBadRequestExtra2", Union[Dict[str, Any], List[Any]]
)


GetDataviewInformationIndividualBadRequestExtra1TypedDict = TypeAliasType(
    "GetDataviewInformationIndividualBadRequestExtra1TypedDict",
    Union[Dict[str, Any], List[Any]],
)


GetDataviewInformationIndividualBadRequestExtra1 = TypeAliasType(
    "GetDataviewInformationIndividualBadRequestExtra1", Union[Dict[str, Any], List[Any]]
)


GetDataviewInformationIndividualResponseTypedDict = TypeAliasType(
    "GetDataviewInformationIndividualResponseTypedDict",
    Union[JobResponseTypedDict, DataviewInfoTypedDict],
)


GetDataviewInformationIndividualResponse = TypeAliasType(
    "GetDataviewInformationIndividualResponse", Union[JobResponse, DataviewInfo]
)
