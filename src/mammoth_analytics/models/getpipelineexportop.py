"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
from typing import Any, Dict, List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class GetPipelineExportRequestTypedDict(TypedDict):
    dataset_id: int
    r"""Id of the dataset"""
    export_id: int
    r"""Id of a pipeline export"""
    workspace_id: int
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""
    project_id: int
    r"""Project ID of the workspace"""
    dataview_id: int
    r"""Dataview ID of the dataset"""
    fields: NotRequired[str]
    r"""Fields to be returned in a comma-separated format. Check full mode for all fields."""


class GetPipelineExportRequest(BaseModel):
    dataset_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Id of the dataset"""

    export_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Id of a pipeline export"""

    workspace_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 2
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""

    project_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 1
    r"""Project ID of the workspace"""

    dataview_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 4
    r"""Dataview ID of the dataset"""

    fields: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = "__standard"
    r"""Fields to be returned in a comma-separated format. Check full mode for all fields."""


GetPipelineExportNotFoundExtraTypedDict = TypeAliasType(
    "GetPipelineExportNotFoundExtraTypedDict", Union[Dict[str, Any], List[Any]]
)


GetPipelineExportNotFoundExtra = TypeAliasType(
    "GetPipelineExportNotFoundExtra", Union[Dict[str, Any], List[Any]]
)


GetPipelineExportBadRequestExtra2TypedDict = TypeAliasType(
    "GetPipelineExportBadRequestExtra2TypedDict", Union[Dict[str, Any], List[Any]]
)


GetPipelineExportBadRequestExtra2 = TypeAliasType(
    "GetPipelineExportBadRequestExtra2", Union[Dict[str, Any], List[Any]]
)


GetPipelineExportBadRequestExtra1TypedDict = TypeAliasType(
    "GetPipelineExportBadRequestExtra1TypedDict", Union[Dict[str, Any], List[Any]]
)


GetPipelineExportBadRequestExtra1 = TypeAliasType(
    "GetPipelineExportBadRequestExtra1", Union[Dict[str, Any], List[Any]]
)
