"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .checkconnectoraccessrequestschema import (
    CheckConnectorAccessRequestSchema,
    CheckConnectorAccessRequestSchemaTypedDict,
)
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing import Any, Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class CheckConnectorAccessRequestTypedDict(TypedDict):
    check_connector_access_request_schema: CheckConnectorAccessRequestSchemaTypedDict
    workspace_id: int
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""


class CheckConnectorAccessRequest(BaseModel):
    check_connector_access_request_schema: Annotated[
        CheckConnectorAccessRequestSchema,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]

    workspace_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 2
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""


CheckConnectorAccessExtraTypedDict = TypeAliasType(
    "CheckConnectorAccessExtraTypedDict", Union[Dict[str, Any], List[Any]]
)


CheckConnectorAccessExtra = TypeAliasType(
    "CheckConnectorAccessExtra", Union[Dict[str, Any], List[Any]]
)
