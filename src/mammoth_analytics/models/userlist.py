"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .userfieldschema import UserFieldSchema, UserFieldSchemaTypedDict
from .userfullschema import UserFullSchema, UserFullSchemaTypedDict
from .userminschema import UserMinSchema, UserMinSchemaTypedDict
from .userstdschema import UserStdSchema, UserStdSchemaTypedDict
from mammoth_analytics.types import BaseModel
from typing import List, Optional, Union
from typing_extensions import NotRequired, TypeAliasType, TypedDict


UserTypedDict = TypeAliasType(
    "UserTypedDict",
    Union[
        UserMinSchemaTypedDict,
        UserStdSchemaTypedDict,
        UserFieldSchemaTypedDict,
        UserFullSchemaTypedDict,
    ],
)


User = TypeAliasType(
    "User", Union[UserMinSchema, UserStdSchema, UserFieldSchema, UserFullSchema]
)


class UserListTypedDict(TypedDict):
    users: List[UserTypedDict]
    next: str
    r"""URI for next page of data"""
    offset: NotRequired[int]
    limit: NotRequired[int]


class UserList(BaseModel):
    users: List[User]

    next: str
    r"""URI for next page of data"""

    offset: Optional[int] = 0

    limit: Optional[int] = 50
