"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .createcheckouturlrequestschema import (
    CreateCheckoutURLRequestSchema,
    CreateCheckoutURLRequestSchemaTypedDict,
)
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing import Any, Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class CreateCheckoutURLRequestTypedDict(TypedDict):
    create_checkout_url_request_schema: CreateCheckoutURLRequestSchemaTypedDict
    workspace_id: int
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""


class CreateCheckoutURLRequest(BaseModel):
    create_checkout_url_request_schema: Annotated[
        CreateCheckoutURLRequestSchema,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]

    workspace_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 2
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""


CreateCheckoutURLExtraTypedDict = TypeAliasType(
    "CreateCheckoutURLExtraTypedDict", Union[Dict[str, Any], List[Any]]
)


CreateCheckoutURLExtra = TypeAliasType(
    "CreateCheckoutURLExtra", Union[Dict[str, Any], List[Any]]
)
