"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .batchespostrequest import BatchesPostRequest, BatchesPostRequestTypedDict
from .objectjobschema import ObjectJobSchema, ObjectJobSchemaTypedDict
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing import Any, Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class CreateBatchRequestTypedDict(TypedDict):
    dataset_id: int
    r"""Id of the dataset"""
    batches_post_request: BatchesPostRequestTypedDict
    workspace_id: int
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""
    project_id: int
    r"""Project ID of the workspace"""


class CreateBatchRequest(BaseModel):
    dataset_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Id of the dataset"""

    batches_post_request: Annotated[
        BatchesPostRequest,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]

    workspace_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 2
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""

    project_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 1
    r"""Project ID of the workspace"""


CreateBatchExtra2TypedDict = TypeAliasType(
    "CreateBatchExtra2TypedDict", Union[Dict[str, Any], List[Any]]
)


CreateBatchExtra2 = TypeAliasType("CreateBatchExtra2", Union[Dict[str, Any], List[Any]])


CreateBatchExtra1TypedDict = TypeAliasType(
    "CreateBatchExtra1TypedDict", Union[Dict[str, Any], List[Any]]
)


CreateBatchExtra1 = TypeAliasType("CreateBatchExtra1", Union[Dict[str, Any], List[Any]])


CreateBatchResponseTypedDict = TypeAliasType(
    "CreateBatchResponseTypedDict", Union[ObjectJobSchemaTypedDict, Dict[str, Any]]
)
r"""Request fulfilled, document follows"""


CreateBatchResponse = TypeAliasType(
    "CreateBatchResponse", Union[ObjectJobSchema, Dict[str, Any]]
)
r"""Request fulfilled, document follows"""
