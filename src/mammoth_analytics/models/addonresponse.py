"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from mammoth_analytics.types import (
    BaseModel,
    Nullable,
    OptionalNullable,
    UNSET,
    UNSET_SENTINEL,
)
from pydantic import model_serializer
from typing_extensions import NotRequired, TypedDict


class AddonResponseTypedDict(TypedDict):
    r"""Details of the created addon"""

    id: int
    r"""Unique identifier for the addon"""
    workspace_id: int
    r"""ID of the workspace this addon belongs to"""
    addon_type: str
    r"""Type of addon (connector, storage, user)"""
    quantity: int
    r"""Quantity of the addon"""
    status: str
    r"""Status of the addon (pending, active, cancelled)"""
    created_at: NotRequired[Nullable[datetime]]
    r"""When the addon was created"""


class AddonResponse(BaseModel):
    r"""Details of the created addon"""

    id: int
    r"""Unique identifier for the addon"""

    workspace_id: int
    r"""ID of the workspace this addon belongs to"""

    addon_type: str
    r"""Type of addon (connector, storage, user)"""

    quantity: int
    r"""Quantity of the addon"""

    status: str
    r"""Status of the addon (pending, active, cancelled)"""

    created_at: OptionalNullable[datetime] = UNSET
    r"""When the addon was created"""

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = ["created_at"]
        nullable_fields = ["created_at"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in type(self).model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
