"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .workspacefieldschema import WorkspaceFieldSchema, WorkspaceFieldSchemaTypedDict
from .workspacefullschema import WorkspaceFullSchema, WorkspaceFullSchemaTypedDict
from .workspaceminschema import WorkspaceMinSchema, WorkspaceMinSchemaTypedDict
from .workspacestdschema import WorkspaceStdSchema, WorkspaceStdSchemaTypedDict
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
from typing import List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class GetWorkspaceDetailRequestTypedDict(TypedDict):
    workspace_id: int
    r"""Id of the workspace to work with"""
    fields: NotRequired[str]
    r"""Fields to return. Can be (id, name)"""


class GetWorkspaceDetailRequest(BaseModel):
    workspace_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Id of the workspace to work with"""

    fields: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = "__standard"
    r"""Fields to return. Can be (id, name)"""


GetWorkspaceDetailResponseTypedDict = TypeAliasType(
    "GetWorkspaceDetailResponseTypedDict",
    Union[
        List[WorkspaceMinSchemaTypedDict],
        List[WorkspaceStdSchemaTypedDict],
        List[WorkspaceFullSchemaTypedDict],
        List[WorkspaceFieldSchemaTypedDict],
    ],
)
r"""Get workspace Details"""


GetWorkspaceDetailResponse = TypeAliasType(
    "GetWorkspaceDetailResponse",
    Union[
        List[WorkspaceMinSchema],
        List[WorkspaceStdSchema],
        List[WorkspaceFullSchema],
        List[WorkspaceFieldSchema],
    ],
)
r"""Get workspace Details"""
