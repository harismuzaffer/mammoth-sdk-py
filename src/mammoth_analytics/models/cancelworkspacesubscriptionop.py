"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from mammoth_analytics.types import BaseModel, Nullable, UNSET_SENTINEL
from mammoth_analytics.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from pydantic import model_serializer
from typing import Any, Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class CancelWorkspaceSubscriptionRequestTypedDict(TypedDict):
    request_body: Nullable[Dict[str, Any]]
    workspace_id: int
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""


class CancelWorkspaceSubscriptionRequest(BaseModel):
    request_body: Annotated[
        Nullable[Dict[str, Any]],
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]

    workspace_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 2
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = []
        nullable_fields = ["RequestBody"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in type(self).model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m


CancelWorkspaceSubscriptionExtraTypedDict = TypeAliasType(
    "CancelWorkspaceSubscriptionExtraTypedDict", Union[Dict[str, Any], List[Any]]
)


CancelWorkspaceSubscriptionExtra = TypeAliasType(
    "CancelWorkspaceSubscriptionExtra", Union[Dict[str, Any], List[Any]]
)
