"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import validate_const
import pydantic
from pydantic.functional_validators import AfterValidator
from typing import Literal
from typing_extensions import Annotated, TypedDict


class ProjectUserPatchOpValue(str, Enum):
    PROJECT_ADMIN = "project_admin"
    PROJECT_ANALYST = "project_analyst"


class ProjectUserPatchOpTypedDict(TypedDict):
    value: ProjectUserPatchOpValue
    op: Literal["replace"]
    r"""Operation"""
    path: Literal["permissions"]
    r"""Path"""


class ProjectUserPatchOp(BaseModel):
    value: ProjectUserPatchOpValue

    OP: Annotated[
        Annotated[Literal["replace"], AfterValidator(validate_const("replace"))],
        pydantic.Field(alias="op"),
    ] = "replace"
    r"""Operation"""

    PATH: Annotated[
        Annotated[
            Literal["permissions"], AfterValidator(validate_const("permissions"))
        ],
        pydantic.Field(alias="path"),
    ] = "permissions"
    r"""Path"""
