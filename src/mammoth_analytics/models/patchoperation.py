"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import validate_const
import pydantic
from pydantic.functional_validators import AfterValidator
from typing import List, Literal, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


PatchOperationValueTypedDict = TypeAliasType(
    "PatchOperationValueTypedDict", Union[str, List[str]]
)
r"""Value to replace the attribute with"""


PatchOperationValue = TypeAliasType("PatchOperationValue", Union[str, List[str]])
r"""Value to replace the attribute with"""


class PatchOperationTypedDict(TypedDict):
    path: str
    r"""Path"""
    value: PatchOperationValueTypedDict
    r"""Value to replace the attribute with"""
    op: Literal["replace"]
    r"""Operation"""


class PatchOperation(BaseModel):
    path: str
    r"""Path"""

    value: PatchOperationValue
    r"""Value to replace the attribute with"""

    OP: Annotated[
        Annotated[Literal["replace"], AfterValidator(validate_const("replace"))],
        pydantic.Field(alias="op"),
    ] = "replace"
    r"""Operation"""
