"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import FieldMetadata, QueryParamMetadata
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetWorkspacesRequestTypedDict(TypedDict):
    fields: NotRequired[str]
    r"""Fields to be returned in a comma-separated format may include id, name, created_at, updated_at."""
    name: NotRequired[str]
    r"""Fetch all workspaces which matches given name (case sensitive)"""
    created_at: NotRequired[str]
    r"""Fetch all workspaces which matches given filter criterion"""
    updated_at: NotRequired[str]
    r"""Fetch all workspaces which matches given filter criterion"""
    sort: NotRequired[str]
    r"""Sort workspace by id or name"""
    offset: NotRequired[int]
    r"""Offset from the beginning of the workspace list"""
    limit: NotRequired[int]
    r"""Max number of workspaces to return"""


class GetWorkspacesRequest(BaseModel):
    fields: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = "id,name,status,url,updated_at,created_at,last_accessed,path"
    r"""Fields to be returned in a comma-separated format may include id, name, created_at, updated_at."""

    name: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = ""
    r"""Fetch all workspaces which matches given name (case sensitive)"""

    created_at: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = ""
    r"""Fetch all workspaces which matches given filter criterion"""

    updated_at: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = ""
    r"""Fetch all workspaces which matches given filter criterion"""

    sort: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = "(name:asc)"
    r"""Sort workspace by id or name"""

    offset: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 0
    r"""Offset from the beginning of the workspace list"""

    limit: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 10
    r"""Max number of workspaces to return"""
