"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .checkusagelimitsrequestschema import (
    CheckUsageLimitsRequestSchema,
    CheckUsageLimitsRequestSchemaTypedDict,
)
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing import Any, Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class CheckUsageLimitsRequestTypedDict(TypedDict):
    check_usage_limits_request_schema: CheckUsageLimitsRequestSchemaTypedDict
    workspace_id: int
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""


class CheckUsageLimitsRequest(BaseModel):
    check_usage_limits_request_schema: Annotated[
        CheckUsageLimitsRequestSchema,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]

    workspace_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 2
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""


CheckUsageLimitsExtraTypedDict = TypeAliasType(
    "CheckUsageLimitsExtraTypedDict", Union[Dict[str, Any], List[Any]]
)


CheckUsageLimitsExtra = TypeAliasType(
    "CheckUsageLimitsExtra", Union[Dict[str, Any], List[Any]]
)
