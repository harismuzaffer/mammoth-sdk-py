"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .jobresponse import JobResponse, JobResponseTypedDict
from .pipelineexortsmodificationresp import (
    PipelineExortsModificationResp,
    PipelineExortsModificationRespTypedDict,
)
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
from typing import Any, Dict, List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class DeleteExportRequestTypedDict(TypedDict):
    dataset_id: int
    r"""Id of the dataset"""
    export_id: int
    r"""Id of a pipeline export"""
    workspace_id: int
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""
    project_id: int
    r"""Project ID of the workspace"""
    dataview_id: int
    r"""Dataview ID of the dataset"""
    skip_validation: NotRequired[bool]


class DeleteExportRequest(BaseModel):
    dataset_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Id of the dataset"""

    export_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Id of a pipeline export"""

    workspace_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 2
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""

    project_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 1
    r"""Project ID of the workspace"""

    dataview_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 4
    r"""Dataview ID of the dataset"""

    skip_validation: Annotated[
        Optional[bool],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = False


DeleteExportNotFoundExtraTypedDict = TypeAliasType(
    "DeleteExportNotFoundExtraTypedDict", Union[Dict[str, Any], List[Any]]
)


DeleteExportNotFoundExtra = TypeAliasType(
    "DeleteExportNotFoundExtra", Union[Dict[str, Any], List[Any]]
)


DeleteExportBadRequestExtra2TypedDict = TypeAliasType(
    "DeleteExportBadRequestExtra2TypedDict", Union[Dict[str, Any], List[Any]]
)


DeleteExportBadRequestExtra2 = TypeAliasType(
    "DeleteExportBadRequestExtra2", Union[Dict[str, Any], List[Any]]
)


DeleteExportBadRequestExtra1TypedDict = TypeAliasType(
    "DeleteExportBadRequestExtra1TypedDict", Union[Dict[str, Any], List[Any]]
)


DeleteExportBadRequestExtra1 = TypeAliasType(
    "DeleteExportBadRequestExtra1", Union[Dict[str, Any], List[Any]]
)


DeleteExportResponseBodyTypedDict = TypeAliasType(
    "DeleteExportResponseBodyTypedDict",
    Union[PipelineExortsModificationRespTypedDict, Any],
)
r"""Request fulfilled, document follows"""


DeleteExportResponseBody = TypeAliasType(
    "DeleteExportResponseBody", Union[PipelineExortsModificationResp, Any]
)
r"""Request fulfilled, document follows"""


DeleteExportResponseTypedDict = TypeAliasType(
    "DeleteExportResponseTypedDict",
    Union[
        JobResponseTypedDict,
        PipelineExortsModificationRespTypedDict,
        DeleteExportResponseBodyTypedDict,
    ],
)


DeleteExportResponse = TypeAliasType(
    "DeleteExportResponse",
    Union[JobResponse, PipelineExortsModificationResp, DeleteExportResponseBody],
)
