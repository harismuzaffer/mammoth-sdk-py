"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import validate_const
import pydantic
from pydantic.functional_validators import AfterValidator
from typing import Literal
from typing_extensions import Annotated, TypedDict


class WorkspaceUserPatchOpValue(str, Enum):
    r"""New role name"""

    WORKSPACE_MEMBER = "workspace_member"
    WORKSPACE_ADMIN = "workspace_admin"
    WORKSPACE_OWNER = "workspace_owner"
    WORKSPACE_GUEST = "workspace_guest"


class WorkspaceUserPatchOpTypedDict(TypedDict):
    value: WorkspaceUserPatchOpValue
    r"""New role name"""
    op: Literal["replace"]
    r"""Operation to be performed"""
    path: Literal["role"]
    r"""Operation path"""


class WorkspaceUserPatchOp(BaseModel):
    value: WorkspaceUserPatchOpValue
    r"""New role name"""

    OP: Annotated[
        Annotated[Literal["replace"], AfterValidator(validate_const("replace"))],
        pydantic.Field(alias="op"),
    ] = "replace"
    r"""Operation to be performed"""

    PATH: Annotated[
        Annotated[Literal["role"], AfterValidator(validate_const("role"))],
        pydantic.Field(alias="path"),
    ] = "role"
    r"""Operation path"""
