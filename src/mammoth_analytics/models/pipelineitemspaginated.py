"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .itemexport import ItemExport, ItemExportTypedDict
from .itemtask import ItemTask, ItemTaskTypedDict
from mammoth_analytics.types import BaseModel
from typing import List, Optional, Union
from typing_extensions import NotRequired, TypeAliasType, TypedDict


ItemTypedDict = TypeAliasType(
    "ItemTypedDict", Union[ItemTaskTypedDict, ItemExportTypedDict]
)


Item = TypeAliasType("Item", Union[ItemTask, ItemExport])


class PipelineItemsPaginatedTypedDict(TypedDict):
    next: str
    r"""Url of the next page"""
    items: List[ItemTypedDict]
    limit: NotRequired[int]
    r"""Setting limit would limit the items received in the page"""
    offset: NotRequired[int]
    r"""First position to return from the results"""


class PipelineItemsPaginated(BaseModel):
    next: str
    r"""Url of the next page"""

    items: List[Item]

    limit: Optional[int] = 10
    r"""Setting limit would limit the items received in the page"""

    offset: Optional[int] = 0
    r"""First position to return from the results"""
