"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .dataviewactiveusers import DataviewActiveUsers, DataviewActiveUsersTypedDict
from .jobresponse import JobResponse, JobResponseTypedDict
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import FieldMetadata, PathParamMetadata
from typing import Any, Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class MarkActiveUserRequestTypedDict(TypedDict):
    dataset_id: int
    r"""Id of the dataset"""
    workspace_id: int
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""
    project_id: int
    r"""Project ID of the workspace"""
    dataview_id: int
    r"""Dataview ID of the dataset"""


class MarkActiveUserRequest(BaseModel):
    dataset_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Id of the dataset"""

    workspace_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 2
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""

    project_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 1
    r"""Project ID of the workspace"""

    dataview_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 4
    r"""Dataview ID of the dataset"""


MarkActiveUserNotFoundExtraTypedDict = TypeAliasType(
    "MarkActiveUserNotFoundExtraTypedDict", Union[Dict[str, Any], List[Any]]
)


MarkActiveUserNotFoundExtra = TypeAliasType(
    "MarkActiveUserNotFoundExtra", Union[Dict[str, Any], List[Any]]
)


MarkActiveUserUnauthorizedExtraTypedDict = TypeAliasType(
    "MarkActiveUserUnauthorizedExtraTypedDict", Union[Dict[str, Any], List[Any]]
)


MarkActiveUserUnauthorizedExtra = TypeAliasType(
    "MarkActiveUserUnauthorizedExtra", Union[Dict[str, Any], List[Any]]
)


MarkActiveUserBadRequestExtra2TypedDict = TypeAliasType(
    "MarkActiveUserBadRequestExtra2TypedDict", Union[Dict[str, Any], List[Any]]
)


MarkActiveUserBadRequestExtra2 = TypeAliasType(
    "MarkActiveUserBadRequestExtra2", Union[Dict[str, Any], List[Any]]
)


MarkActiveUserBadRequestExtra1TypedDict = TypeAliasType(
    "MarkActiveUserBadRequestExtra1TypedDict", Union[Dict[str, Any], List[Any]]
)


MarkActiveUserBadRequestExtra1 = TypeAliasType(
    "MarkActiveUserBadRequestExtra1", Union[Dict[str, Any], List[Any]]
)


MarkActiveUserResponseTypedDict = TypeAliasType(
    "MarkActiveUserResponseTypedDict",
    Union[DataviewActiveUsersTypedDict, JobResponseTypedDict],
)


MarkActiveUserResponse = TypeAliasType(
    "MarkActiveUserResponse", Union[DataviewActiveUsers, JobResponse]
)
