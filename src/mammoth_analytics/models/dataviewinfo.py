"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .displaypropertiesresponse import (
    DisplayPropertiesResponse,
    DisplayPropertiesResponseTypedDict,
)
from enum import Enum
from mammoth_analytics.types import (
    BaseModel,
    Nullable,
    OptionalNullable,
    UNSET,
    UNSET_SENTINEL,
)
from pydantic import model_serializer
from typing import Any, Dict, List
from typing_extensions import NotRequired, TypedDict


class DataviewInfoMetadataTypedDict(TypedDict):
    pass


class DataviewInfoMetadata(BaseModel):
    pass


class PipelineStatus(str, Enum):
    r"""Pipeline Status"""

    RUNNING = "running"
    SUBMITTED = "submitted"
    READY = "ready"
    ERROR = "error"


class DataviewInfoDraftMode(str, Enum):
    r"""Draft Mode Status"""

    CLEAN = "clean"
    DIRTY = "dirty"
    OFF = "off"


class DependenciesInfoTypedDict(TypedDict):
    pass


class DependenciesInfo(BaseModel):
    pass


class DataviewInfoTypedDict(TypedDict):
    display_properties: DisplayPropertiesResponseTypedDict
    r"""Display Properties"""
    id: NotRequired[Nullable[int]]
    r"""Dataview ID"""
    name: NotRequired[Nullable[str]]
    r"""Dataview Name"""
    ds_id: NotRequired[Nullable[int]]
    r"""Dataset ID"""
    user_display_properties: NotRequired[Nullable[Dict[str, Any]]]
    r"""User Display Properties"""
    data_url: NotRequired[Nullable[str]]
    r"""URL for Dataview Data"""
    metadata: NotRequired[Nullable[List[DataviewInfoMetadataTypedDict]]]
    r"""Metadata Dictionary"""
    sys_cols: NotRequired[Nullable[List[Dict[str, Any]]]]
    r"""System Columns Metadata Dictionary"""
    status: NotRequired[Nullable[str]]
    r"""Status"""
    pipeline_status: NotRequired[Nullable[PipelineStatus]]
    r"""Pipeline Status"""
    is_pipeline_running: NotRequired[Nullable[bool]]
    r"""Is Pipeline Running"""
    draft_mode: NotRequired[Nullable[DataviewInfoDraftMode]]
    r"""Draft Mode Status"""
    row_count: NotRequired[Nullable[int]]
    r"""Number of rows in Dataview"""
    column_count: NotRequired[Nullable[int]]
    r"""Number of columns in Dataview"""
    pipeline_autorun_enabled: NotRequired[Nullable[bool]]
    r"""Is Pipeline Autorun Enabled"""
    is_dataview_data_in_sync: NotRequired[Nullable[bool]]
    r"""Is Dataview Data in Sync"""
    taskwise_info: NotRequired[Nullable[Dict[str, Dict[str, Any]]]]
    r"""Taskwise Information Dictionary"""
    original_data_updated: NotRequired[Nullable[bool]]
    r"""Original Data Updated"""
    dependencies_info: NotRequired[Nullable[Dict[str, DependenciesInfoTypedDict]]]
    r"""Dependencies related to other dataviews"""
    created_at: NotRequired[Nullable[str]]
    r"""Date and time when the Dataview was created in ISO 8601 format"""
    updated_at: NotRequired[Nullable[str]]
    r"""Date and time when the Dataview was updated in ISO 8601 format"""
    data_updated_at: NotRequired[Nullable[str]]
    r"""Date and time when the Dataview data was last updated in ISO 8601 format"""


class DataviewInfo(BaseModel):
    display_properties: DisplayPropertiesResponse
    r"""Display Properties"""

    id: OptionalNullable[int] = UNSET
    r"""Dataview ID"""

    name: OptionalNullable[str] = UNSET
    r"""Dataview Name"""

    ds_id: OptionalNullable[int] = UNSET
    r"""Dataset ID"""

    user_display_properties: OptionalNullable[Dict[str, Any]] = UNSET
    r"""User Display Properties"""

    data_url: OptionalNullable[str] = UNSET
    r"""URL for Dataview Data"""

    metadata: OptionalNullable[List[DataviewInfoMetadata]] = UNSET
    r"""Metadata Dictionary"""

    sys_cols: OptionalNullable[List[Dict[str, Any]]] = UNSET
    r"""System Columns Metadata Dictionary"""

    status: OptionalNullable[str] = UNSET
    r"""Status"""

    pipeline_status: OptionalNullable[PipelineStatus] = UNSET
    r"""Pipeline Status"""

    is_pipeline_running: OptionalNullable[bool] = UNSET
    r"""Is Pipeline Running"""

    draft_mode: OptionalNullable[DataviewInfoDraftMode] = UNSET
    r"""Draft Mode Status"""

    row_count: OptionalNullable[int] = UNSET
    r"""Number of rows in Dataview"""

    column_count: OptionalNullable[int] = UNSET
    r"""Number of columns in Dataview"""

    pipeline_autorun_enabled: OptionalNullable[bool] = UNSET
    r"""Is Pipeline Autorun Enabled"""

    is_dataview_data_in_sync: OptionalNullable[bool] = UNSET
    r"""Is Dataview Data in Sync"""

    taskwise_info: OptionalNullable[Dict[str, Dict[str, Any]]] = UNSET
    r"""Taskwise Information Dictionary"""

    original_data_updated: OptionalNullable[bool] = UNSET
    r"""Original Data Updated"""

    dependencies_info: OptionalNullable[Dict[str, DependenciesInfo]] = UNSET
    r"""Dependencies related to other dataviews"""

    created_at: OptionalNullable[str] = UNSET
    r"""Date and time when the Dataview was created in ISO 8601 format"""

    updated_at: OptionalNullable[str] = UNSET
    r"""Date and time when the Dataview was updated in ISO 8601 format"""

    data_updated_at: OptionalNullable[str] = UNSET
    r"""Date and time when the Dataview data was last updated in ISO 8601 format"""

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = [
            "id",
            "name",
            "ds_id",
            "user_display_properties",
            "data_url",
            "metadata",
            "sys_cols",
            "status",
            "pipeline_status",
            "is_pipeline_running",
            "draft_mode",
            "row_count",
            "column_count",
            "pipeline_autorun_enabled",
            "is_dataview_data_in_sync",
            "taskwise_info",
            "original_data_updated",
            "dependencies_info",
            "created_at",
            "updated_at",
            "data_updated_at",
        ]
        nullable_fields = [
            "id",
            "name",
            "ds_id",
            "user_display_properties",
            "data_url",
            "metadata",
            "sys_cols",
            "status",
            "pipeline_status",
            "is_pipeline_running",
            "draft_mode",
            "row_count",
            "column_count",
            "pipeline_autorun_enabled",
            "is_dataview_data_in_sync",
            "taskwise_info",
            "original_data_updated",
            "dependencies_info",
            "created_at",
            "updated_at",
            "data_updated_at",
        ]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in type(self).model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
