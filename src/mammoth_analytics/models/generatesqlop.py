"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .sqlgenerationspec import SQLGenerationSpec, SQLGenerationSpecTypedDict
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import (
    FieldMetadata,
    PathParamMetadata,
    QueryParamMetadata,
    RequestMetadata,
)
from typing import Any, Dict, List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class GenerateSQLRequestTypedDict(TypedDict):
    dataset_id: int
    r"""Id of the dataset"""
    sql_generation_spec: SQLGenerationSpecTypedDict
    workspace_id: int
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""
    project_id: int
    r"""Project ID of the workspace"""
    dataview_id: NotRequired[int]
    r"""Dataview ID of the dataset"""


class GenerateSQLRequest(BaseModel):
    dataset_id: Annotated[
        int, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))
    ]
    r"""Id of the dataset"""

    sql_generation_spec: Annotated[
        SQLGenerationSpec,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]

    workspace_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 2
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""

    project_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 1
    r"""Project ID of the workspace"""

    dataview_id: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 4
    r"""Dataview ID of the dataset"""


GenerateSQLExtraTypedDict = TypeAliasType(
    "GenerateSQLExtraTypedDict", Union[Dict[str, Any], List[Any]]
)


GenerateSQLExtra = TypeAliasType("GenerateSQLExtra", Union[Dict[str, Any], List[Any]])


class ResponseBodyTypedDict(TypedDict):
    pass


class ResponseBody(BaseModel):
    pass


GenerateSQLResponseBodyUnionTypedDict = TypeAliasType(
    "GenerateSQLResponseBodyUnionTypedDict", Union[ResponseBodyTypedDict, Any]
)
r"""Document created, URL follows"""


GenerateSQLResponseBodyUnion = TypeAliasType(
    "GenerateSQLResponseBodyUnion", Union[ResponseBody, Any]
)
r"""Document created, URL follows"""


class GenerateSQLResponseBodyTypedDict(TypedDict):
    r"""SQL query generated successfully"""


class GenerateSQLResponseBody(BaseModel):
    r"""SQL query generated successfully"""


GenerateSQLResponseTypedDict = TypeAliasType(
    "GenerateSQLResponseTypedDict",
    Union[GenerateSQLResponseBodyTypedDict, GenerateSQLResponseBodyUnionTypedDict],
)


GenerateSQLResponse = TypeAliasType(
    "GenerateSQLResponse", Union[GenerateSQLResponseBody, GenerateSQLResponseBodyUnion]
)
