"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .createsubscriptionrequestschema import (
    CreateSubscriptionRequestSchema,
    CreateSubscriptionRequestSchemaTypedDict,
)
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing import Any, Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class CreateWorkspaceSubscriptionRequestTypedDict(TypedDict):
    create_subscription_request_schema: CreateSubscriptionRequestSchemaTypedDict
    workspace_id: int
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""


class CreateWorkspaceSubscriptionRequest(BaseModel):
    create_subscription_request_schema: Annotated[
        CreateSubscriptionRequestSchema,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]

    workspace_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 2
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""


CreateWorkspaceSubscriptionExtraTypedDict = TypeAliasType(
    "CreateWorkspaceSubscriptionExtraTypedDict", Union[Dict[str, Any], List[Any]]
)


CreateWorkspaceSubscriptionExtra = TypeAliasType(
    "CreateWorkspaceSubscriptionExtra", Union[Dict[str, Any], List[Any]]
)
