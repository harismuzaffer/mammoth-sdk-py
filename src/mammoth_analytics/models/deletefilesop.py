"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
from typing import Any, Dict, List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class DeleteFilesRequestTypedDict(TypedDict):
    workspace_id: int
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""
    project_id: int
    r"""Project ID of the workspace"""
    ids: NotRequired[str]
    r"""Track multiple file ids, comma separated"""


class DeleteFilesRequest(BaseModel):
    workspace_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 2
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""

    project_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 1
    r"""Project ID of the workspace"""

    ids: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = ""
    r"""Track multiple file ids, comma separated"""


DeleteFilesExtra2TypedDict = TypeAliasType(
    "DeleteFilesExtra2TypedDict", Union[Dict[str, Any], List[Any]]
)


DeleteFilesExtra2 = TypeAliasType("DeleteFilesExtra2", Union[Dict[str, Any], List[Any]])


DeleteFilesExtra1TypedDict = TypeAliasType(
    "DeleteFilesExtra1TypedDict", Union[Dict[str, Any], List[Any]]
)


DeleteFilesExtra1 = TypeAliasType("DeleteFilesExtra1", Union[Dict[str, Any], List[Any]])
