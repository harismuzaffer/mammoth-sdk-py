"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .connectionpatchrequest import (
    ConnectionPatchRequest,
    ConnectionPatchRequestTypedDict,
)
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import (
    FieldMetadata,
    PathParamMetadata,
    QueryParamMetadata,
    RequestMetadata,
)
from typing import Any, Dict, List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class UpdateConnectionRequestTypedDict(TypedDict):
    connector_key: str
    r"""Encoded key of the Connector to work with"""
    connection_key: str
    r"""Encoded key of the connection"""
    connection_patch_request: ConnectionPatchRequestTypedDict
    workspace_id: int
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""
    project_id: int
    r"""Project ID of the workspace"""
    is_export: NotRequired[bool]
    r"""Is export type"""


class UpdateConnectionRequest(BaseModel):
    connector_key: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Encoded key of the Connector to work with"""

    connection_key: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Encoded key of the connection"""

    connection_patch_request: Annotated[
        ConnectionPatchRequest,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]

    workspace_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 2
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""

    project_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 1
    r"""Project ID of the workspace"""

    is_export: Annotated[
        Optional[bool],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = False
    r"""Is export type"""


UpdateConnectionUnauthorizedExtraTypedDict = TypeAliasType(
    "UpdateConnectionUnauthorizedExtraTypedDict", Union[Dict[str, Any], List[Any]]
)


UpdateConnectionUnauthorizedExtra = TypeAliasType(
    "UpdateConnectionUnauthorizedExtra", Union[Dict[str, Any], List[Any]]
)


UpdateConnectionBadRequestExtra2TypedDict = TypeAliasType(
    "UpdateConnectionBadRequestExtra2TypedDict", Union[Dict[str, Any], List[Any]]
)


UpdateConnectionBadRequestExtra2 = TypeAliasType(
    "UpdateConnectionBadRequestExtra2", Union[Dict[str, Any], List[Any]]
)


UpdateConnectionBadRequestExtra1TypedDict = TypeAliasType(
    "UpdateConnectionBadRequestExtra1TypedDict", Union[Dict[str, Any], List[Any]]
)


UpdateConnectionBadRequestExtra1 = TypeAliasType(
    "UpdateConnectionBadRequestExtra1", Union[Dict[str, Any], List[Any]]
)
