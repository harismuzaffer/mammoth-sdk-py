"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .segmentspatch import SegmentsPatch, SegmentsPatchTypedDict
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing import Any, Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class UpdateSegmentsRequestTypedDict(TypedDict):
    segments_patch: SegmentsPatchTypedDict
    workspace_id: int
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""


class UpdateSegmentsRequest(BaseModel):
    segments_patch: Annotated[
        SegmentsPatch,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]

    workspace_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 2
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""


UpdateSegmentsUnauthorizedExtraTypedDict = TypeAliasType(
    "UpdateSegmentsUnauthorizedExtraTypedDict", Union[Dict[str, Any], List[Any]]
)


UpdateSegmentsUnauthorizedExtra = TypeAliasType(
    "UpdateSegmentsUnauthorizedExtra", Union[Dict[str, Any], List[Any]]
)


UpdateSegmentsBadRequestExtra2TypedDict = TypeAliasType(
    "UpdateSegmentsBadRequestExtra2TypedDict", Union[Dict[str, Any], List[Any]]
)


UpdateSegmentsBadRequestExtra2 = TypeAliasType(
    "UpdateSegmentsBadRequestExtra2", Union[Dict[str, Any], List[Any]]
)


UpdateSegmentsBadRequestExtra1TypedDict = TypeAliasType(
    "UpdateSegmentsBadRequestExtra1TypedDict", Union[Dict[str, Any], List[Any]]
)


UpdateSegmentsBadRequestExtra1 = TypeAliasType(
    "UpdateSegmentsBadRequestExtra1", Union[Dict[str, Any], List[Any]]
)
