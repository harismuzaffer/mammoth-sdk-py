"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .webhookspec import WebhookSpec, WebhookSpecTypedDict
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing import Any, Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class CreateAWebhookRequestTypedDict(TypedDict):
    webhook_spec: WebhookSpecTypedDict
    workspace_id: int
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""
    project_id: int
    r"""Project ID of the workspace"""


class CreateAWebhookRequest(BaseModel):
    webhook_spec: Annotated[
        WebhookSpec,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]

    workspace_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 2
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""

    project_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 1
    r"""Project ID of the workspace"""


CreateAWebhookExtra2TypedDict = TypeAliasType(
    "CreateAWebhookExtra2TypedDict", Union[Dict[str, Any], List[Any]]
)


CreateAWebhookExtra2 = TypeAliasType(
    "CreateAWebhookExtra2", Union[Dict[str, Any], List[Any]]
)


CreateAWebhookExtra1TypedDict = TypeAliasType(
    "CreateAWebhookExtra1TypedDict", Union[Dict[str, Any], List[Any]]
)


CreateAWebhookExtra1 = TypeAliasType(
    "CreateAWebhookExtra1", Union[Dict[str, Any], List[Any]]
)
