"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import FieldMetadata, PathParamMetadata
from typing import Any, Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class DeleteAutomationRequestTypedDict(TypedDict):
    workspace_id: int
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""
    project_id: int
    r"""Project ID of the workspace"""
    automation_id: int
    r"""ID of the automation"""


class DeleteAutomationRequest(BaseModel):
    workspace_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 2
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""

    project_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 1
    r"""Project ID of the workspace"""

    automation_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 4
    r"""ID of the automation"""


DeleteAutomationUnauthorizedExtraTypedDict = TypeAliasType(
    "DeleteAutomationUnauthorizedExtraTypedDict", Union[Dict[str, Any], List[Any]]
)


DeleteAutomationUnauthorizedExtra = TypeAliasType(
    "DeleteAutomationUnauthorizedExtra", Union[Dict[str, Any], List[Any]]
)


DeleteAutomationBadRequestExtra2TypedDict = TypeAliasType(
    "DeleteAutomationBadRequestExtra2TypedDict", Union[Dict[str, Any], List[Any]]
)


DeleteAutomationBadRequestExtra2 = TypeAliasType(
    "DeleteAutomationBadRequestExtra2", Union[Dict[str, Any], List[Any]]
)


DeleteAutomationBadRequestExtra1TypedDict = TypeAliasType(
    "DeleteAutomationBadRequestExtra1TypedDict", Union[Dict[str, Any], List[Any]]
)


DeleteAutomationBadRequestExtra1 = TypeAliasType(
    "DeleteAutomationBadRequestExtra1", Union[Dict[str, Any], List[Any]]
)
