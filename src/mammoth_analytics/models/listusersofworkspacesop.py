"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import FieldMetadata, QueryParamMetadata
from typing import Any, Dict, List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class ListUsersOfWorkspacesRequestTypedDict(TypedDict):
    fields: NotRequired[str]
    r"""Fields to be returned in a comma-separated format may include id, name, created_at, updated_at."""
    sort: NotRequired[str]
    r"""Sort users by id, first_name or email"""
    offset: NotRequired[int]
    r"""Offset from the beginning of the users list"""
    limit: NotRequired[int]
    r"""Max number of users to return"""


class ListUsersOfWorkspacesRequest(BaseModel):
    fields: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = "id,email,first_name,last_name,created_at,updated_at,last_login_date,last_active_date,profile_link"
    r"""Fields to be returned in a comma-separated format may include id, name, created_at, updated_at."""

    sort: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = "(email:asc)"
    r"""Sort users by id, first_name or email"""

    offset: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 0
    r"""Offset from the beginning of the users list"""

    limit: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 10
    r"""Max number of users to return"""


ListUsersOfWorkspacesExtraTypedDict = TypeAliasType(
    "ListUsersOfWorkspacesExtraTypedDict", Union[Dict[str, Any], List[Any]]
)


ListUsersOfWorkspacesExtra = TypeAliasType(
    "ListUsersOfWorkspacesExtra", Union[Dict[str, Any], List[Any]]
)


class ListUsersOfWorkspacesResponseTypedDict(TypedDict):
    r"""Request fulfilled, document follows"""


class ListUsersOfWorkspacesResponse(BaseModel):
    r"""Request fulfilled, document follows"""
