"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from mammoth_analytics.types import (
    BaseModel,
    Nullable,
    OptionalNullable,
    UNSET,
    UNSET_SENTINEL,
)
from pydantic import model_serializer
from typing_extensions import NotRequired, TypedDict


class FolderSchemaTypedDict(TypedDict):
    id: NotRequired[Nullable[int]]
    r"""Folder Id"""
    name: NotRequired[Nullable[str]]
    r"""Folder Name"""
    status: NotRequired[Nullable[str]]
    r"""Status"""
    created_at: NotRequired[Nullable[datetime]]
    r"""Created At"""
    updated_at: NotRequired[Nullable[datetime]]
    r"""Updated At"""
    resource_id: NotRequired[Nullable[int]]
    r"""Resource id"""
    created_by: NotRequired[Nullable[str]]
    r"""Created By"""
    parent_id: NotRequired[Nullable[str]]
    r"""Parent Id"""
    resource_path: NotRequired[Nullable[str]]
    r"""Resource Path"""


class FolderSchema(BaseModel):
    id: OptionalNullable[int] = UNSET
    r"""Folder Id"""

    name: OptionalNullable[str] = UNSET
    r"""Folder Name"""

    status: OptionalNullable[str] = UNSET
    r"""Status"""

    created_at: OptionalNullable[datetime] = UNSET
    r"""Created At"""

    updated_at: OptionalNullable[datetime] = UNSET
    r"""Updated At"""

    resource_id: OptionalNullable[int] = UNSET
    r"""Resource id"""

    created_by: OptionalNullable[str] = UNSET
    r"""Created By"""

    parent_id: OptionalNullable[str] = UNSET
    r"""Parent Id"""

    resource_path: OptionalNullable[str] = UNSET
    r"""Resource Path"""

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = [
            "id",
            "name",
            "status",
            "created_at",
            "updated_at",
            "resource_id",
            "created_by",
            "parent_id",
            "resource_path",
        ]
        nullable_fields = [
            "id",
            "name",
            "status",
            "created_at",
            "updated_at",
            "resource_id",
            "created_by",
            "parent_id",
            "resource_path",
        ]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in type(self).model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
