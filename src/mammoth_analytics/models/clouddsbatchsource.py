"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .clouddbbatchsource import CloudDBBatchSource, CloudDBBatchSourceTypedDict
from .clouddsbigquerybatchsource import (
    CloudDsBigqueryBatchSource,
    CloudDsBigqueryBatchSourceTypedDict,
)
from .clouddsdatabricksbatchsource import (
    CloudDsDatabricksBatchSource,
    CloudDsDatabricksBatchSourceTypedDict,
)
from .clouddsfacebookbatchsource import (
    CloudDsFacebookBatchSource,
    CloudDsFacebookBatchSourceTypedDict,
)
from .clouddsgoogleadsbatchsource import (
    CloudDsGoogleAdsBatchSource,
    CloudDsGoogleAdsBatchSourceTypedDict,
)
from .clouddsgoogleanalyticsbatchsource import (
    CloudDsGoogleAnalyticsBatchSource,
    CloudDsGoogleAnalyticsBatchSourceTypedDict,
)
from .clouddshubspotbatchsource import (
    CloudDsHubspotBatchSource,
    CloudDsHubspotBatchSourceTypedDict,
)
from .clouddsmailchimpbatchsource import (
    CloudDsMailchimpBatchSource,
    CloudDsMailchimpBatchSourceTypedDict,
)
from .clouddsparquetbatchsource import (
    CloudDsParquetBatchSource,
    CloudDsParquetBatchSourceTypedDict,
)
from .clouddssalesforcebatchsource import (
    CloudDsSalesforceBatchSource,
    CloudDsSalesforceBatchSourceTypedDict,
)
from .clouddssftpbatchsource import (
    CloudDsSftpBatchSource,
    CloudDsSftpBatchSourceTypedDict,
)
from .clouddsshopifybatchsource import (
    CloudDsShopifyBatchSource,
    CloudDsShopifyBatchSourceTypedDict,
)
from .clouddssnowflakebatchsource import (
    CloudDsSnowflakeBatchSource,
    CloudDsSnowflakeBatchSourceTypedDict,
)
from .clouddszoombatchsource import (
    CloudDsZoomBatchSource,
    CloudDsZoomBatchSourceTypedDict,
)
from mammoth_analytics.types import (
    BaseModel,
    Nullable,
    OptionalNullable,
    UNSET,
    UNSET_SENTINEL,
)
from pydantic import model_serializer
from typing import Union
from typing_extensions import NotRequired, TypeAliasType, TypedDict


ConnectorDetailsTypedDict = TypeAliasType(
    "ConnectorDetailsTypedDict",
    Union[
        CloudDsZoomBatchSourceTypedDict,
        CloudDsMailchimpBatchSourceTypedDict,
        CloudDsGoogleAnalyticsBatchSourceTypedDict,
        CloudDsFacebookBatchSourceTypedDict,
        CloudDsGoogleAdsBatchSourceTypedDict,
        CloudDsShopifyBatchSourceTypedDict,
        CloudDsSalesforceBatchSourceTypedDict,
        CloudDsBigqueryBatchSourceTypedDict,
        CloudDBBatchSourceTypedDict,
        CloudDsHubspotBatchSourceTypedDict,
        CloudDsDatabricksBatchSourceTypedDict,
        CloudDsSftpBatchSourceTypedDict,
        CloudDsParquetBatchSourceTypedDict,
        CloudDsSnowflakeBatchSourceTypedDict,
    ],
)
r"""Connector Details"""


ConnectorDetails = TypeAliasType(
    "ConnectorDetails",
    Union[
        CloudDsZoomBatchSource,
        CloudDsMailchimpBatchSource,
        CloudDsGoogleAnalyticsBatchSource,
        CloudDsFacebookBatchSource,
        CloudDsGoogleAdsBatchSource,
        CloudDsShopifyBatchSource,
        CloudDsSalesforceBatchSource,
        CloudDsBigqueryBatchSource,
        CloudDBBatchSource,
        CloudDsHubspotBatchSource,
        CloudDsDatabricksBatchSource,
        CloudDsSftpBatchSource,
        CloudDsParquetBatchSource,
        CloudDsSnowflakeBatchSource,
    ],
)
r"""Connector Details"""


class CloudDsBatchSourceTypedDict(TypedDict):
    type: NotRequired[Nullable[str]]
    r"""Type of the source"""
    connector_name: NotRequired[Nullable[str]]
    r"""Connector Name"""
    query: NotRequired[Nullable[str]]
    r"""Query"""
    profile: NotRequired[Nullable[str]]
    r"""Profile"""
    connector_details: NotRequired[Nullable[ConnectorDetailsTypedDict]]
    r"""Connector Details"""


class CloudDsBatchSource(BaseModel):
    type: OptionalNullable[str] = UNSET
    r"""Type of the source"""

    connector_name: OptionalNullable[str] = UNSET
    r"""Connector Name"""

    query: OptionalNullable[str] = UNSET
    r"""Query"""

    profile: OptionalNullable[str] = UNSET
    r"""Profile"""

    connector_details: OptionalNullable[ConnectorDetails] = UNSET
    r"""Connector Details"""

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = [
            "type",
            "connector_name",
            "query",
            "profile",
            "connector_details",
        ]
        nullable_fields = [
            "type",
            "connector_name",
            "query",
            "profile",
            "connector_details",
        ]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in type(self).model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
