"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .addexportspec import AddExportSpec, AddExportSpecTypedDict
from .jobresponse import JobResponse, JobResponseTypedDict
from .pipelineexortsmodificationresp import (
    PipelineExortsModificationResp,
    PipelineExortsModificationRespTypedDict,
)
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import FieldMetadata, PathParamMetadata, RequestMetadata
import pydantic
from typing import Any, Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class AddExportRequestTypedDict(TypedDict):
    dataset_id: int
    r"""Id of the dataset"""
    add_export_spec: AddExportSpecTypedDict
    workspace_id: int
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""
    project_id: int
    r"""Project ID of the workspace"""
    dataview_id_param: int
    r"""Dataview ID of the dataset"""


class AddExportRequest(BaseModel):
    dataset_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Id of the dataset"""

    add_export_spec: Annotated[
        AddExportSpec,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]

    workspace_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 2
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""

    project_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 1
    r"""Project ID of the workspace"""

    dataview_id_param: Annotated[
        int,
        pydantic.Field(alias="dataview_id"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ] = 4
    r"""Dataview ID of the dataset"""


AddExportExtra2TypedDict = TypeAliasType(
    "AddExportExtra2TypedDict", Union[Dict[str, Any], List[Any]]
)


AddExportExtra2 = TypeAliasType("AddExportExtra2", Union[Dict[str, Any], List[Any]])


AddExportExtra1TypedDict = TypeAliasType(
    "AddExportExtra1TypedDict", Union[Dict[str, Any], List[Any]]
)


AddExportExtra1 = TypeAliasType("AddExportExtra1", Union[Dict[str, Any], List[Any]])


AddExportResponseTypedDict = TypeAliasType(
    "AddExportResponseTypedDict",
    Union[JobResponseTypedDict, PipelineExortsModificationRespTypedDict],
)


AddExportResponse = TypeAliasType(
    "AddExportResponse", Union[JobResponse, PipelineExortsModificationResp]
)
