"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .subscriptionpatchvalue import (
    SubscriptionPatchValue,
    SubscriptionPatchValueTypedDict,
)
from enum import Enum
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import validate_const
import pydantic
from pydantic.functional_validators import AfterValidator
from typing import Literal
from typing_extensions import Annotated, TypedDict


class SubscriptionPatchItemOp(str, Enum):
    r"""Operation to be performed on the subscription"""

    ADD = "add"
    REMOVE = "remove"
    REPLACE = "replace"


class SubscriptionPatchItemTypedDict(TypedDict):
    op: SubscriptionPatchItemOp
    r"""Operation to be performed on the subscription"""
    value: SubscriptionPatchValueTypedDict
    path: Literal["addons"]
    r"""Path of the subscription"""


class SubscriptionPatchItem(BaseModel):
    op: SubscriptionPatchItemOp
    r"""Operation to be performed on the subscription"""

    value: SubscriptionPatchValue

    PATH: Annotated[
        Annotated[Literal["addons"], AfterValidator(validate_const("addons"))],
        pydantic.Field(alias="path"),
    ] = "addons"
    r"""Path of the subscription"""
