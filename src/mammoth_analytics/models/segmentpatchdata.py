"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import validate_const
import pydantic
from pydantic.functional_validators import AfterValidator
from typing import Literal
from typing_extensions import Annotated, TypedDict


class SegmentPatchDataOperation(str, Enum):
    r"""Operation to be performed on the segment"""

    ADD = "add"
    REMOVE = "remove"


class SegmentPatchDataTypedDict(TypedDict):
    op: SegmentPatchDataOperation
    r"""Operation to be performed on the segment"""
    value: str
    r"""Value of the patch request"""
    path: Literal["segments"]
    r"""Path of the patch request"""


class SegmentPatchData(BaseModel):
    op: SegmentPatchDataOperation
    r"""Operation to be performed on the segment"""

    value: str
    r"""Value of the patch request"""

    PATH: Annotated[
        Annotated[Literal["segments"], AfterValidator(validate_const("segments"))],
        pydantic.Field(alias="path"),
    ] = "segments"
    r"""Path of the patch request"""
