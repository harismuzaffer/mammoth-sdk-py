"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .projectspatch import ProjectsPatch, ProjectsPatchTypedDict
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing import Any, Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class UpdateProjectsRequestTypedDict(TypedDict):
    projects_patch: ProjectsPatchTypedDict
    workspace_id: int
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""


class UpdateProjectsRequest(BaseModel):
    projects_patch: Annotated[
        ProjectsPatch,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]

    workspace_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 2
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""


UpdateProjectsUnauthorizedExtraTypedDict = TypeAliasType(
    "UpdateProjectsUnauthorizedExtraTypedDict", Union[Dict[str, Any], List[Any]]
)


UpdateProjectsUnauthorizedExtra = TypeAliasType(
    "UpdateProjectsUnauthorizedExtra", Union[Dict[str, Any], List[Any]]
)


UpdateProjectsBadRequestExtra2TypedDict = TypeAliasType(
    "UpdateProjectsBadRequestExtra2TypedDict", Union[Dict[str, Any], List[Any]]
)


UpdateProjectsBadRequestExtra2 = TypeAliasType(
    "UpdateProjectsBadRequestExtra2", Union[Dict[str, Any], List[Any]]
)


UpdateProjectsBadRequestExtra1TypedDict = TypeAliasType(
    "UpdateProjectsBadRequestExtra1TypedDict", Union[Dict[str, Any], List[Any]]
)


UpdateProjectsBadRequestExtra1 = TypeAliasType(
    "UpdateProjectsBadRequestExtra1", Union[Dict[str, Any], List[Any]]
)
