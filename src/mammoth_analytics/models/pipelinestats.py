"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from mammoth_analytics.types import (
    BaseModel,
    Nullable,
    OptionalNullable,
    UNSET,
    UNSET_SENTINEL,
)
from pydantic import model_serializer
from typing_extensions import NotRequired, TypedDict


class PipelineStatsTypedDict(TypedDict):
    last_run_by: NotRequired[Nullable[str]]
    r"""e.g. user_12 means pipeline was last run by a user whose id is 12"""
    last_run_at: NotRequired[Nullable[str]]
    r"""when was the pipeline last run"""
    last_modified_by: NotRequired[Nullable[str]]
    r"""e.g. user_20 means pipeline was last modified by a user whose id is 20"""
    last_modified_at: NotRequired[Nullable[str]]
    r"""when was the pipeline last modified"""
    state_changed_at: NotRequired[Nullable[str]]
    r"""when did the pipeline state change"""
    exports_execution_timestamp: NotRequired[Nullable[str]]
    r"""when did any of the exports in the pipeline start/ finish"""


class PipelineStats(BaseModel):
    last_run_by: OptionalNullable[str] = UNSET
    r"""e.g. user_12 means pipeline was last run by a user whose id is 12"""

    last_run_at: OptionalNullable[str] = UNSET
    r"""when was the pipeline last run"""

    last_modified_by: OptionalNullable[str] = UNSET
    r"""e.g. user_20 means pipeline was last modified by a user whose id is 20"""

    last_modified_at: OptionalNullable[str] = UNSET
    r"""when was the pipeline last modified"""

    state_changed_at: OptionalNullable[str] = UNSET
    r"""when did the pipeline state change"""

    exports_execution_timestamp: OptionalNullable[str] = UNSET
    r"""when did any of the exports in the pipeline start/ finish"""

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = [
            "last_run_by",
            "last_run_at",
            "last_modified_by",
            "last_modified_at",
            "state_changed_at",
            "exports_execution_timestamp",
        ]
        nullable_fields = [
            "last_run_by",
            "last_run_at",
            "last_modified_by",
            "last_modified_at",
            "state_changed_at",
            "exports_execution_timestamp",
        ]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in type(self).model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
