"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .automationconditionschema import (
    AutomationConditionSchema,
    AutomationConditionSchemaTypedDict,
)
from .automationtaskschema import AutomationTaskSchema, AutomationTaskSchemaTypedDict
from enum import Enum
from mammoth_analytics.types import BaseModel
from typing import List, Optional
from typing_extensions import NotRequired, TypedDict


class ConditionMode(str, Enum):
    r"""Condition Mode"""

    AND = "and"
    OR = "or"


class AutomationCreationSchemaTypedDict(TypedDict):
    r"""Create automation"""

    name: str
    r"""Name"""
    description: str
    r"""Description"""
    tasks: List[AutomationTaskSchemaTypedDict]
    r"""Tasks"""
    conditions: NotRequired[List[AutomationConditionSchemaTypedDict]]
    r"""Conditions"""
    condition_mode: NotRequired[ConditionMode]
    r"""Condition Mode"""


class AutomationCreationSchema(BaseModel):
    r"""Create automation"""

    name: str
    r"""Name"""

    description: str
    r"""Description"""

    tasks: List[AutomationTaskSchema]
    r"""Tasks"""

    conditions: Optional[List[AutomationConditionSchema]] = None
    r"""Conditions"""

    condition_mode: Optional[ConditionMode] = ConditionMode.OR
    r"""Condition Mode"""
