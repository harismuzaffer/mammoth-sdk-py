"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .profilegenerationspec import ProfileGenerationSpec, ProfileGenerationSpecTypedDict
from mammoth_analytics.types import BaseModel
from mammoth_analytics.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing import Any, Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class GenerateProfileRequestTypedDict(TypedDict):
    dataset_id: int
    r"""Id of the dataset"""
    profile_generation_spec: ProfileGenerationSpecTypedDict
    workspace_id: int
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""
    project_id: int
    r"""Project ID of the workspace"""
    dataview_id: int
    r"""Dataview ID of the dataset"""


class GenerateProfileRequest(BaseModel):
    dataset_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Id of the dataset"""

    profile_generation_spec: Annotated[
        ProfileGenerationSpec,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]

    workspace_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 2
    r"""Workspace refers to a collection of projects. Workspace ID is unique identifier for workspace."""

    project_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 1
    r"""Project ID of the workspace"""

    dataview_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ] = 4
    r"""Dataview ID of the dataset"""


GenerateProfileUnauthorizedExtraTypedDict = TypeAliasType(
    "GenerateProfileUnauthorizedExtraTypedDict", Union[Dict[str, Any], List[Any]]
)


GenerateProfileUnauthorizedExtra = TypeAliasType(
    "GenerateProfileUnauthorizedExtra", Union[Dict[str, Any], List[Any]]
)


GenerateProfileBadRequestExtra2TypedDict = TypeAliasType(
    "GenerateProfileBadRequestExtra2TypedDict", Union[Dict[str, Any], List[Any]]
)


GenerateProfileBadRequestExtra2 = TypeAliasType(
    "GenerateProfileBadRequestExtra2", Union[Dict[str, Any], List[Any]]
)


GenerateProfileBadRequestExtra1TypedDict = TypeAliasType(
    "GenerateProfileBadRequestExtra1TypedDict", Union[Dict[str, Any], List[Any]]
)


GenerateProfileBadRequestExtra1 = TypeAliasType(
    "GenerateProfileBadRequestExtra1", Union[Dict[str, Any], List[Any]]
)
