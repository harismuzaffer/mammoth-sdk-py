"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from mammoth_analytics.types import BaseModel
import pydantic
from typing import List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class FoldersPatchDataOperation(str, Enum):
    r"""Operation"""

    MOVE = "move"


DestinationFolderIDTypedDict = TypeAliasType(
    "DestinationFolderIDTypedDict", Union[int, str]
)
r"""Destination Folder Id/'root' for moving resources to root folder"""


DestinationFolderID = TypeAliasType("DestinationFolderID", Union[int, str])
r"""Destination Folder Id/'root' for moving resources to root folder"""


class FoldersPatchDataTypedDict(TypedDict):
    op: FoldersPatchDataOperation
    r"""Operation"""
    from_: List[int]
    r"""Resource Ids to be moved"""
    path: DestinationFolderIDTypedDict
    r"""Destination Folder Id/'root' for moving resources to root folder"""


class FoldersPatchData(BaseModel):
    op: FoldersPatchDataOperation
    r"""Operation"""

    from_: Annotated[List[int], pydantic.Field(alias="from")]
    r"""Resource Ids to be moved"""

    path: DestinationFolderID
    r"""Destination Folder Id/'root' for moving resources to root folder"""
