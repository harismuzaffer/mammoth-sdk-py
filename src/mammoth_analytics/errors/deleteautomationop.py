"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from mammoth_analytics.errors import MammothAnalyticsError
from mammoth_analytics.models import deleteautomationop as models_deleteautomationop
from mammoth_analytics.types import BaseModel, OptionalNullable, UNSET
from typing import Optional, Union
from typing_extensions import TypeAliasType


class DeleteAutomationUnauthorizedErrorData(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[
        models_deleteautomationop.DeleteAutomationUnauthorizedExtra
    ] = UNSET


class DeleteAutomationUnauthorizedError(MammothAnalyticsError):
    r"""Authorization Exception"""

    data: DeleteAutomationUnauthorizedErrorData

    def __init__(
        self,
        data: DeleteAutomationUnauthorizedErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class DeleteAutomationResponseBodyError2Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[
        models_deleteautomationop.DeleteAutomationBadRequestExtra2
    ] = UNSET


class DeleteAutomationResponseBodyError2(MammothAnalyticsError):
    r"""Validation Exception"""

    data: DeleteAutomationResponseBodyError2Data

    def __init__(
        self,
        data: DeleteAutomationResponseBodyError2Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class DeleteAutomationResponseBodyError1Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[
        models_deleteautomationop.DeleteAutomationBadRequestExtra1
    ] = UNSET


class DeleteAutomationResponseBodyError1(MammothAnalyticsError):
    r"""Client Error"""

    data: DeleteAutomationResponseBodyError1Data

    def __init__(
        self,
        data: DeleteAutomationResponseBodyError1Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


DeleteAutomationBadRequestUnion = TypeAliasType(
    "DeleteAutomationBadRequestUnion",
    Union[
        DeleteAutomationResponseBodyError1Data, DeleteAutomationResponseBodyError2Data
    ],
)
r"""Bad request syntax or unsupported method"""


class DeleteAutomationBadRequest(MammothAnalyticsError):
    r"""Bad request syntax or unsupported method"""

    data: DeleteAutomationBadRequestUnion

    def __init__(
        self,
        data: DeleteAutomationBadRequestUnion,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
