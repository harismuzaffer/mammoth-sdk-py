"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from mammoth_analytics.errors import MammothAnalyticsError
from mammoth_analytics.models import deleteprojectsop as models_deleteprojectsop
from mammoth_analytics.types import BaseModel, OptionalNullable, UNSET
from typing import Optional, Union
from typing_extensions import TypeAliasType


class DeleteProjectsUnauthorizedErrorData(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_deleteprojectsop.DeleteProjectsUnauthorizedExtra] = (
        UNSET
    )


class DeleteProjectsUnauthorizedError(MammothAnalyticsError):
    r"""Authorization Exception"""

    data: DeleteProjectsUnauthorizedErrorData

    def __init__(
        self,
        data: DeleteProjectsUnauthorizedErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class DeleteProjectsResponseBodyError2Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_deleteprojectsop.DeleteProjectsBadRequestExtra2] = (
        UNSET
    )


class DeleteProjectsResponseBodyError2(MammothAnalyticsError):
    r"""Validation Exception"""

    data: DeleteProjectsResponseBodyError2Data

    def __init__(
        self,
        data: DeleteProjectsResponseBodyError2Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class DeleteProjectsResponseBodyError1Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_deleteprojectsop.DeleteProjectsBadRequestExtra1] = (
        UNSET
    )


class DeleteProjectsResponseBodyError1(MammothAnalyticsError):
    r"""Client Error"""

    data: DeleteProjectsResponseBodyError1Data

    def __init__(
        self,
        data: DeleteProjectsResponseBodyError1Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


DeleteProjectsBadRequestUnion = TypeAliasType(
    "DeleteProjectsBadRequestUnion",
    Union[DeleteProjectsResponseBodyError1Data, DeleteProjectsResponseBodyError2Data],
)
r"""Bad request syntax or unsupported method"""


class DeleteProjectsBadRequest(MammothAnalyticsError):
    r"""Bad request syntax or unsupported method"""

    data: DeleteProjectsBadRequestUnion

    def __init__(
        self,
        data: DeleteProjectsBadRequestUnion,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
