"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from mammoth_analytics.errors import MammothAnalyticsError
from mammoth_analytics.models import listdataviewsop as models_listdataviewsop
from mammoth_analytics.types import BaseModel, OptionalNullable, UNSET
from typing import Optional, Union
from typing_extensions import TypeAliasType


class ListDataviewsNotFoundErrorData(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_listdataviewsop.ListDataviewsNotFoundExtra] = UNSET


class ListDataviewsNotFoundError(MammothAnalyticsError):
    r"""Not Found Exception"""

    data: ListDataviewsNotFoundErrorData

    def __init__(
        self,
        data: ListDataviewsNotFoundErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class ListDataviewsUnauthorizedErrorData(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_listdataviewsop.ListDataviewsUnauthorizedExtra] = (
        UNSET
    )


class ListDataviewsUnauthorizedError(MammothAnalyticsError):
    r"""Authorization Exception"""

    data: ListDataviewsUnauthorizedErrorData

    def __init__(
        self,
        data: ListDataviewsUnauthorizedErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class ListDataviewsResponseBodyError2Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_listdataviewsop.ListDataviewsBadRequestExtra2] = (
        UNSET
    )


class ListDataviewsResponseBodyError2(MammothAnalyticsError):
    r"""Validation Exception"""

    data: ListDataviewsResponseBodyError2Data

    def __init__(
        self,
        data: ListDataviewsResponseBodyError2Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class ListDataviewsResponseBodyError1Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_listdataviewsop.ListDataviewsBadRequestExtra1] = (
        UNSET
    )


class ListDataviewsResponseBodyError1(MammothAnalyticsError):
    r"""Client Error"""

    data: ListDataviewsResponseBodyError1Data

    def __init__(
        self,
        data: ListDataviewsResponseBodyError1Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


ListDataviewsBadRequestUnion = TypeAliasType(
    "ListDataviewsBadRequestUnion",
    Union[ListDataviewsResponseBodyError1Data, ListDataviewsResponseBodyError2Data],
)
r"""Bad request syntax or unsupported method"""


class ListDataviewsBadRequest(MammothAnalyticsError):
    r"""Bad request syntax or unsupported method"""

    data: ListDataviewsBadRequestUnion

    def __init__(
        self,
        data: ListDataviewsBadRequestUnion,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
