"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from mammoth_analytics.errors import MammothAnalyticsError
from mammoth_analytics.models import updateprojectsop as models_updateprojectsop
from mammoth_analytics.types import BaseModel, OptionalNullable, UNSET
from typing import Optional, Union
from typing_extensions import TypeAliasType


class UpdateProjectsUnauthorizedErrorData(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_updateprojectsop.UpdateProjectsUnauthorizedExtra] = (
        UNSET
    )


class UpdateProjectsUnauthorizedError(MammothAnalyticsError):
    r"""Authorization Exception"""

    data: UpdateProjectsUnauthorizedErrorData

    def __init__(
        self,
        data: UpdateProjectsUnauthorizedErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class UpdateProjectsResponseBodyError2Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_updateprojectsop.UpdateProjectsBadRequestExtra2] = (
        UNSET
    )


class UpdateProjectsResponseBodyError2(MammothAnalyticsError):
    r"""Validation Exception"""

    data: UpdateProjectsResponseBodyError2Data

    def __init__(
        self,
        data: UpdateProjectsResponseBodyError2Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class UpdateProjectsResponseBodyError1Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_updateprojectsop.UpdateProjectsBadRequestExtra1] = (
        UNSET
    )


class UpdateProjectsResponseBodyError1(MammothAnalyticsError):
    r"""Client Error"""

    data: UpdateProjectsResponseBodyError1Data

    def __init__(
        self,
        data: UpdateProjectsResponseBodyError1Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


UpdateProjectsBadRequestUnion = TypeAliasType(
    "UpdateProjectsBadRequestUnion",
    Union[UpdateProjectsResponseBodyError1Data, UpdateProjectsResponseBodyError2Data],
)
r"""Bad request syntax or unsupported method"""


class UpdateProjectsBadRequest(MammothAnalyticsError):
    r"""Bad request syntax or unsupported method"""

    data: UpdateProjectsBadRequestUnion

    def __init__(
        self,
        data: UpdateProjectsBadRequestUnion,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
