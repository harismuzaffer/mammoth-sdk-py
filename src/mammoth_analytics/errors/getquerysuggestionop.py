"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from mammoth_analytics.errors import MammothAnalyticsError
from mammoth_analytics.models import getquerysuggestionop as models_getquerysuggestionop
from mammoth_analytics.types import BaseModel, OptionalNullable, UNSET
from typing import Optional, Union
from typing_extensions import TypeAliasType


class GetQuerySuggestionUnauthorizedErrorData(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[
        models_getquerysuggestionop.GetQuerySuggestionUnauthorizedExtra
    ] = UNSET


class GetQuerySuggestionUnauthorizedError(MammothAnalyticsError):
    r"""Authorization Exception"""

    data: GetQuerySuggestionUnauthorizedErrorData

    def __init__(
        self,
        data: GetQuerySuggestionUnauthorizedErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class GetQuerySuggestionResponseBodyError2Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[
        models_getquerysuggestionop.GetQuerySuggestionBadRequestExtra2
    ] = UNSET


class GetQuerySuggestionResponseBodyError2(MammothAnalyticsError):
    r"""Validation Exception"""

    data: GetQuerySuggestionResponseBodyError2Data

    def __init__(
        self,
        data: GetQuerySuggestionResponseBodyError2Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class GetQuerySuggestionResponseBodyError1Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[
        models_getquerysuggestionop.GetQuerySuggestionBadRequestExtra1
    ] = UNSET


class GetQuerySuggestionResponseBodyError1(MammothAnalyticsError):
    r"""Client Error"""

    data: GetQuerySuggestionResponseBodyError1Data

    def __init__(
        self,
        data: GetQuerySuggestionResponseBodyError1Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


GetQuerySuggestionBadRequestUnion = TypeAliasType(
    "GetQuerySuggestionBadRequestUnion",
    Union[
        GetQuerySuggestionResponseBodyError1Data,
        GetQuerySuggestionResponseBodyError2Data,
    ],
)
r"""Bad request syntax or unsupported method"""


class GetQuerySuggestionBadRequest(MammothAnalyticsError):
    r"""Bad request syntax or unsupported method"""

    data: GetQuerySuggestionBadRequestUnion

    def __init__(
        self,
        data: GetQuerySuggestionBadRequestUnion,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
