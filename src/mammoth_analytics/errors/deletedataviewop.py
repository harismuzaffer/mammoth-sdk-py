"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from mammoth_analytics.errors import MammothAnalyticsError
from mammoth_analytics.models import deletedataviewop as models_deletedataviewop
from mammoth_analytics.types import BaseModel, OptionalNullable, UNSET
from typing import Optional, Union
from typing_extensions import TypeAliasType


class DeleteDataviewNotFoundErrorData(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_deletedataviewop.DeleteDataviewNotFoundExtra] = UNSET


class DeleteDataviewNotFoundError(MammothAnalyticsError):
    r"""Not Found Exception"""

    data: DeleteDataviewNotFoundErrorData

    def __init__(
        self,
        data: DeleteDataviewNotFoundErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class DeleteDataviewUnauthorizedErrorData(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_deletedataviewop.DeleteDataviewUnauthorizedExtra] = (
        UNSET
    )


class DeleteDataviewUnauthorizedError(MammothAnalyticsError):
    r"""Authorization Exception"""

    data: DeleteDataviewUnauthorizedErrorData

    def __init__(
        self,
        data: DeleteDataviewUnauthorizedErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class DeleteDataviewResponseBodyError2Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_deletedataviewop.DeleteDataviewBadRequestExtra2] = (
        UNSET
    )


class DeleteDataviewResponseBodyError2(MammothAnalyticsError):
    r"""Validation Exception"""

    data: DeleteDataviewResponseBodyError2Data

    def __init__(
        self,
        data: DeleteDataviewResponseBodyError2Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class DeleteDataviewResponseBodyError1Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_deletedataviewop.DeleteDataviewBadRequestExtra1] = (
        UNSET
    )


class DeleteDataviewResponseBodyError1(MammothAnalyticsError):
    r"""Client Error"""

    data: DeleteDataviewResponseBodyError1Data

    def __init__(
        self,
        data: DeleteDataviewResponseBodyError1Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


DeleteDataviewBadRequestUnion = TypeAliasType(
    "DeleteDataviewBadRequestUnion",
    Union[DeleteDataviewResponseBodyError1Data, DeleteDataviewResponseBodyError2Data],
)
r"""Bad request syntax or unsupported method"""


class DeleteDataviewBadRequest(MammothAnalyticsError):
    r"""Bad request syntax or unsupported method"""

    data: DeleteDataviewBadRequestUnion

    def __init__(
        self,
        data: DeleteDataviewBadRequestUnion,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
