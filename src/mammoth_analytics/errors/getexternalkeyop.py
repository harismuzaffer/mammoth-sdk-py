"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from mammoth_analytics.errors import MammothAnalyticsError
from mammoth_analytics.models import getexternalkeyop as models_getexternalkeyop
from mammoth_analytics.types import BaseModel, OptionalNullable, UNSET
from typing import Optional, Union
from typing_extensions import TypeAliasType


class GetExternalKeyNotFoundErrorData(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_getexternalkeyop.GetExternalKeyNotFoundExtra] = UNSET


class GetExternalKeyNotFoundError(MammothAnalyticsError):
    r"""Not Found Exception"""

    data: GetExternalKeyNotFoundErrorData

    def __init__(
        self,
        data: GetExternalKeyNotFoundErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class GetExternalKeyResponseBodyError2Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_getexternalkeyop.GetExternalKeyBadRequestExtra2] = (
        UNSET
    )


class GetExternalKeyResponseBodyError2(MammothAnalyticsError):
    r"""Validation Exception"""

    data: GetExternalKeyResponseBodyError2Data

    def __init__(
        self,
        data: GetExternalKeyResponseBodyError2Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class GetExternalKeyResponseBodyError1Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_getexternalkeyop.GetExternalKeyBadRequestExtra1] = (
        UNSET
    )


class GetExternalKeyResponseBodyError1(MammothAnalyticsError):
    r"""Client Error"""

    data: GetExternalKeyResponseBodyError1Data

    def __init__(
        self,
        data: GetExternalKeyResponseBodyError1Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


GetExternalKeyBadRequestUnion = TypeAliasType(
    "GetExternalKeyBadRequestUnion",
    Union[GetExternalKeyResponseBodyError1Data, GetExternalKeyResponseBodyError2Data],
)
r"""Bad request syntax or unsupported method"""


class GetExternalKeyBadRequest(MammothAnalyticsError):
    r"""Bad request syntax or unsupported method"""

    data: GetExternalKeyBadRequestUnion

    def __init__(
        self,
        data: GetExternalKeyBadRequestUnion,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
