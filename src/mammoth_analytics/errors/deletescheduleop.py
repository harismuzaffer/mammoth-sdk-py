"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from mammoth_analytics.errors import MammothAnalyticsError
from mammoth_analytics.models import deletescheduleop as models_deletescheduleop
from mammoth_analytics.types import BaseModel, OptionalNullable, UNSET
from typing import Optional, Union
from typing_extensions import TypeAliasType


class DeleteScheduleUnauthorizedErrorData(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_deletescheduleop.DeleteScheduleUnauthorizedExtra] = (
        UNSET
    )


class DeleteScheduleUnauthorizedError(MammothAnalyticsError):
    r"""Authorization Exception"""

    data: DeleteScheduleUnauthorizedErrorData

    def __init__(
        self,
        data: DeleteScheduleUnauthorizedErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class DeleteScheduleResponseBodyError2Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_deletescheduleop.DeleteScheduleBadRequestExtra2] = (
        UNSET
    )


class DeleteScheduleResponseBodyError2(MammothAnalyticsError):
    r"""Validation Exception"""

    data: DeleteScheduleResponseBodyError2Data

    def __init__(
        self,
        data: DeleteScheduleResponseBodyError2Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class DeleteScheduleResponseBodyError1Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_deletescheduleop.DeleteScheduleBadRequestExtra1] = (
        UNSET
    )


class DeleteScheduleResponseBodyError1(MammothAnalyticsError):
    r"""Client Error"""

    data: DeleteScheduleResponseBodyError1Data

    def __init__(
        self,
        data: DeleteScheduleResponseBodyError1Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


DeleteScheduleBadRequestUnion = TypeAliasType(
    "DeleteScheduleBadRequestUnion",
    Union[DeleteScheduleResponseBodyError1Data, DeleteScheduleResponseBodyError2Data],
)
r"""Bad request syntax or unsupported method"""


class DeleteScheduleBadRequest(MammothAnalyticsError):
    r"""Bad request syntax or unsupported method"""

    data: DeleteScheduleBadRequestUnion

    def __init__(
        self,
        data: DeleteScheduleBadRequestUnion,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
