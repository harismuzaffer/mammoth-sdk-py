"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from mammoth_analytics.errors import MammothAnalyticsError
from mammoth_analytics.models import (
    deletemultipledataviewsop as models_deletemultipledataviewsop,
)
from mammoth_analytics.types import BaseModel, OptionalNullable, UNSET
from typing import Optional, Union
from typing_extensions import TypeAliasType


class DeleteMultipleDataviewsNotFoundErrorData(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[
        models_deletemultipledataviewsop.DeleteMultipleDataviewsNotFoundExtra
    ] = UNSET


class DeleteMultipleDataviewsNotFoundError(MammothAnalyticsError):
    r"""Not Found Exception"""

    data: DeleteMultipleDataviewsNotFoundErrorData

    def __init__(
        self,
        data: DeleteMultipleDataviewsNotFoundErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class DeleteMultipleDataviewsUnauthorizedErrorData(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[
        models_deletemultipledataviewsop.DeleteMultipleDataviewsUnauthorizedExtra
    ] = UNSET


class DeleteMultipleDataviewsUnauthorizedError(MammothAnalyticsError):
    r"""Authorization Exception"""

    data: DeleteMultipleDataviewsUnauthorizedErrorData

    def __init__(
        self,
        data: DeleteMultipleDataviewsUnauthorizedErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class DeleteMultipleDataviewsResponseBodyError2Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[
        models_deletemultipledataviewsop.DeleteMultipleDataviewsBadRequestExtra2
    ] = UNSET


class DeleteMultipleDataviewsResponseBodyError2(MammothAnalyticsError):
    r"""Validation Exception"""

    data: DeleteMultipleDataviewsResponseBodyError2Data

    def __init__(
        self,
        data: DeleteMultipleDataviewsResponseBodyError2Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class DeleteMultipleDataviewsResponseBodyError1Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[
        models_deletemultipledataviewsop.DeleteMultipleDataviewsBadRequestExtra1
    ] = UNSET


class DeleteMultipleDataviewsResponseBodyError1(MammothAnalyticsError):
    r"""Client Error"""

    data: DeleteMultipleDataviewsResponseBodyError1Data

    def __init__(
        self,
        data: DeleteMultipleDataviewsResponseBodyError1Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


DeleteMultipleDataviewsBadRequestUnion = TypeAliasType(
    "DeleteMultipleDataviewsBadRequestUnion",
    Union[
        DeleteMultipleDataviewsResponseBodyError1Data,
        DeleteMultipleDataviewsResponseBodyError2Data,
    ],
)
r"""Bad request syntax or unsupported method"""


class DeleteMultipleDataviewsBadRequest(MammothAnalyticsError):
    r"""Bad request syntax or unsupported method"""

    data: DeleteMultipleDataviewsBadRequestUnion

    def __init__(
        self,
        data: DeleteMultipleDataviewsBadRequestUnion,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
