"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from mammoth_analytics.errors import MammothAnalyticsError
from mammoth_analytics.models import updatesegmentsop as models_updatesegmentsop
from mammoth_analytics.types import BaseModel, OptionalNullable, UNSET
from typing import Optional, Union
from typing_extensions import TypeAliasType


class UpdateSegmentsUnauthorizedErrorData(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_updatesegmentsop.UpdateSegmentsUnauthorizedExtra] = (
        UNSET
    )


class UpdateSegmentsUnauthorizedError(MammothAnalyticsError):
    r"""Authorization Exception"""

    data: UpdateSegmentsUnauthorizedErrorData

    def __init__(
        self,
        data: UpdateSegmentsUnauthorizedErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class UpdateSegmentsResponseBodyError2Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_updatesegmentsop.UpdateSegmentsBadRequestExtra2] = (
        UNSET
    )


class UpdateSegmentsResponseBodyError2(MammothAnalyticsError):
    r"""Validation Exception"""

    data: UpdateSegmentsResponseBodyError2Data

    def __init__(
        self,
        data: UpdateSegmentsResponseBodyError2Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class UpdateSegmentsResponseBodyError1Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_updatesegmentsop.UpdateSegmentsBadRequestExtra1] = (
        UNSET
    )


class UpdateSegmentsResponseBodyError1(MammothAnalyticsError):
    r"""Client Error"""

    data: UpdateSegmentsResponseBodyError1Data

    def __init__(
        self,
        data: UpdateSegmentsResponseBodyError1Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


UpdateSegmentsBadRequestUnion = TypeAliasType(
    "UpdateSegmentsBadRequestUnion",
    Union[UpdateSegmentsResponseBodyError1Data, UpdateSegmentsResponseBodyError2Data],
)
r"""Bad request syntax or unsupported method"""


class UpdateSegmentsBadRequest(MammothAnalyticsError):
    r"""Bad request syntax or unsupported method"""

    data: UpdateSegmentsBadRequestUnion

    def __init__(
        self,
        data: UpdateSegmentsBadRequestUnion,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
