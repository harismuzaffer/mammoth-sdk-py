"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from mammoth_analytics.errors import MammothAnalyticsError
from mammoth_analytics.models import (
    getdataviewdatapostop as models_getdataviewdatapostop,
)
from mammoth_analytics.types import BaseModel, OptionalNullable, UNSET
from typing import Optional, Union
from typing_extensions import TypeAliasType


class GetDataviewDataPostNotFoundErrorData(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[
        models_getdataviewdatapostop.GetDataviewDataPostNotFoundExtra
    ] = UNSET


class GetDataviewDataPostNotFoundError(MammothAnalyticsError):
    r"""Not Found Exception"""

    data: GetDataviewDataPostNotFoundErrorData

    def __init__(
        self,
        data: GetDataviewDataPostNotFoundErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class GetDataviewDataPostUnauthorizedErrorData(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[
        models_getdataviewdatapostop.GetDataviewDataPostUnauthorizedExtra
    ] = UNSET


class GetDataviewDataPostUnauthorizedError(MammothAnalyticsError):
    r"""Authorization Exception"""

    data: GetDataviewDataPostUnauthorizedErrorData

    def __init__(
        self,
        data: GetDataviewDataPostUnauthorizedErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class GetDataviewDataPostResponseBodyError2Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[
        models_getdataviewdatapostop.GetDataviewDataPostBadRequestExtra2
    ] = UNSET


class GetDataviewDataPostResponseBodyError2(MammothAnalyticsError):
    r"""Validation Exception"""

    data: GetDataviewDataPostResponseBodyError2Data

    def __init__(
        self,
        data: GetDataviewDataPostResponseBodyError2Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class GetDataviewDataPostResponseBodyError1Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[
        models_getdataviewdatapostop.GetDataviewDataPostBadRequestExtra1
    ] = UNSET


class GetDataviewDataPostResponseBodyError1(MammothAnalyticsError):
    r"""Client Error"""

    data: GetDataviewDataPostResponseBodyError1Data

    def __init__(
        self,
        data: GetDataviewDataPostResponseBodyError1Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


GetDataviewDataPostBadRequestUnion = TypeAliasType(
    "GetDataviewDataPostBadRequestUnion",
    Union[
        GetDataviewDataPostResponseBodyError1Data,
        GetDataviewDataPostResponseBodyError2Data,
    ],
)
r"""Bad request syntax or unsupported method"""


class GetDataviewDataPostBadRequest(MammothAnalyticsError):
    r"""Bad request syntax or unsupported method"""

    data: GetDataviewDataPostBadRequestUnion

    def __init__(
        self,
        data: GetDataviewDataPostBadRequestUnion,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
