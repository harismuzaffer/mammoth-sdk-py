"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from mammoth_analytics.errors import MammothAnalyticsError
from mammoth_analytics.models import getpipelineexportsop as models_getpipelineexportsop
from mammoth_analytics.types import BaseModel, OptionalNullable, UNSET
from typing import Optional, Union
from typing_extensions import TypeAliasType


class GetPipelineExportsResponseBodyError2Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_getpipelineexportsop.GetPipelineExportsExtra2] = (
        UNSET
    )


class GetPipelineExportsResponseBodyError2(MammothAnalyticsError):
    r"""Validation Exception"""

    data: GetPipelineExportsResponseBodyError2Data

    def __init__(
        self,
        data: GetPipelineExportsResponseBodyError2Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class GetPipelineExportsResponseBodyError1Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_getpipelineexportsop.GetPipelineExportsExtra1] = (
        UNSET
    )


class GetPipelineExportsResponseBodyError1(MammothAnalyticsError):
    r"""Client Error"""

    data: GetPipelineExportsResponseBodyError1Data

    def __init__(
        self,
        data: GetPipelineExportsResponseBodyError1Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


GetPipelineExportsBadRequestUnion = TypeAliasType(
    "GetPipelineExportsBadRequestUnion",
    Union[
        GetPipelineExportsResponseBodyError1Data,
        GetPipelineExportsResponseBodyError2Data,
    ],
)
r"""Bad request syntax or unsupported method"""


class GetPipelineExportsBadRequest(MammothAnalyticsError):
    r"""Bad request syntax or unsupported method"""

    data: GetPipelineExportsBadRequestUnion

    def __init__(
        self,
        data: GetPipelineExportsBadRequestUnion,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
