"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from mammoth_analytics.errors import MammothAnalyticsError
from mammoth_analytics.models import getdataviewdataop as models_getdataviewdataop
from mammoth_analytics.types import BaseModel, OptionalNullable, UNSET
from typing import Optional, Union
from typing_extensions import TypeAliasType


class GetDataviewDataNotFoundErrorData(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_getdataviewdataop.GetDataviewDataNotFoundExtra] = (
        UNSET
    )


class GetDataviewDataNotFoundError(MammothAnalyticsError):
    r"""Not Found Exception"""

    data: GetDataviewDataNotFoundErrorData

    def __init__(
        self,
        data: GetDataviewDataNotFoundErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class GetDataviewDataUnauthorizedErrorData(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[
        models_getdataviewdataop.GetDataviewDataUnauthorizedExtra
    ] = UNSET


class GetDataviewDataUnauthorizedError(MammothAnalyticsError):
    r"""Authorization Exception"""

    data: GetDataviewDataUnauthorizedErrorData

    def __init__(
        self,
        data: GetDataviewDataUnauthorizedErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class GetDataviewDataResponseBodyError2Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[
        models_getdataviewdataop.GetDataviewDataBadRequestExtra2
    ] = UNSET


class GetDataviewDataResponseBodyError2(MammothAnalyticsError):
    r"""Validation Exception"""

    data: GetDataviewDataResponseBodyError2Data

    def __init__(
        self,
        data: GetDataviewDataResponseBodyError2Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class GetDataviewDataResponseBodyError1Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[
        models_getdataviewdataop.GetDataviewDataBadRequestExtra1
    ] = UNSET


class GetDataviewDataResponseBodyError1(MammothAnalyticsError):
    r"""Client Error"""

    data: GetDataviewDataResponseBodyError1Data

    def __init__(
        self,
        data: GetDataviewDataResponseBodyError1Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


GetDataviewDataBadRequestUnion = TypeAliasType(
    "GetDataviewDataBadRequestUnion",
    Union[GetDataviewDataResponseBodyError1Data, GetDataviewDataResponseBodyError2Data],
)
r"""Bad request syntax or unsupported method"""


class GetDataviewDataBadRequest(MammothAnalyticsError):
    r"""Bad request syntax or unsupported method"""

    data: GetDataviewDataBadRequestUnion

    def __init__(
        self,
        data: GetDataviewDataBadRequestUnion,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
