"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from mammoth_analytics.errors import MammothAnalyticsError
from mammoth_analytics.models import deleteexportop as models_deleteexportop
from mammoth_analytics.types import BaseModel, OptionalNullable, UNSET
from typing import Optional, Union
from typing_extensions import TypeAliasType


class DeleteExportNotFoundErrorData(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_deleteexportop.DeleteExportNotFoundExtra] = UNSET


class DeleteExportNotFoundError(MammothAnalyticsError):
    r"""Not Found Exception"""

    data: DeleteExportNotFoundErrorData

    def __init__(
        self,
        data: DeleteExportNotFoundErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class DeleteExportResponseBodyError2Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_deleteexportop.DeleteExportBadRequestExtra2] = UNSET


class DeleteExportResponseBodyError2(MammothAnalyticsError):
    r"""Validation Exception"""

    data: DeleteExportResponseBodyError2Data

    def __init__(
        self,
        data: DeleteExportResponseBodyError2Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class DeleteExportResponseBodyError1Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_deleteexportop.DeleteExportBadRequestExtra1] = UNSET


class DeleteExportResponseBodyError1(MammothAnalyticsError):
    r"""Client Error"""

    data: DeleteExportResponseBodyError1Data

    def __init__(
        self,
        data: DeleteExportResponseBodyError1Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


DeleteExportBadRequestUnion = TypeAliasType(
    "DeleteExportBadRequestUnion",
    Union[DeleteExportResponseBodyError1Data, DeleteExportResponseBodyError2Data],
)
r"""Bad request syntax or unsupported method"""


class DeleteExportBadRequest(MammothAnalyticsError):
    r"""Bad request syntax or unsupported method"""

    data: DeleteExportBadRequestUnion

    def __init__(
        self,
        data: DeleteExportBadRequestUnion,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
