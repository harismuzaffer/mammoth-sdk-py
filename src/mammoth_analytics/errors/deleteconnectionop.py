"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from mammoth_analytics.errors import MammothAnalyticsError
from mammoth_analytics.models import deleteconnectionop as models_deleteconnectionop
from mammoth_analytics.types import BaseModel, OptionalNullable, UNSET
from typing import Optional, Union
from typing_extensions import TypeAliasType


class DeleteConnectionUnauthorizedErrorData(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[
        models_deleteconnectionop.DeleteConnectionUnauthorizedExtra
    ] = UNSET


class DeleteConnectionUnauthorizedError(MammothAnalyticsError):
    r"""Authorization Exception"""

    data: DeleteConnectionUnauthorizedErrorData

    def __init__(
        self,
        data: DeleteConnectionUnauthorizedErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class DeleteConnectionResponseBodyError2Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[
        models_deleteconnectionop.DeleteConnectionBadRequestExtra2
    ] = UNSET


class DeleteConnectionResponseBodyError2(MammothAnalyticsError):
    r"""Validation Exception"""

    data: DeleteConnectionResponseBodyError2Data

    def __init__(
        self,
        data: DeleteConnectionResponseBodyError2Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class DeleteConnectionResponseBodyError1Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[
        models_deleteconnectionop.DeleteConnectionBadRequestExtra1
    ] = UNSET


class DeleteConnectionResponseBodyError1(MammothAnalyticsError):
    r"""Client Error"""

    data: DeleteConnectionResponseBodyError1Data

    def __init__(
        self,
        data: DeleteConnectionResponseBodyError1Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


DeleteConnectionBadRequestUnion = TypeAliasType(
    "DeleteConnectionBadRequestUnion",
    Union[
        DeleteConnectionResponseBodyError1Data, DeleteConnectionResponseBodyError2Data
    ],
)
r"""Bad request syntax or unsupported method"""


class DeleteConnectionBadRequest(MammothAnalyticsError):
    r"""Bad request syntax or unsupported method"""

    data: DeleteConnectionBadRequestUnion

    def __init__(
        self,
        data: DeleteConnectionBadRequestUnion,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
