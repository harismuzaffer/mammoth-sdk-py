"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from mammoth_analytics.errors import MammothAnalyticsError
from mammoth_analytics.models import updateuserop as models_updateuserop
from mammoth_analytics.types import BaseModel, OptionalNullable, UNSET
from typing import Optional, Union
from typing_extensions import TypeAliasType


class UpdateUserUnauthorizedErrorData(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_updateuserop.UpdateUserUnauthorizedExtra] = UNSET


class UpdateUserUnauthorizedError(MammothAnalyticsError):
    r"""Authorization Exception"""

    data: UpdateUserUnauthorizedErrorData

    def __init__(
        self,
        data: UpdateUserUnauthorizedErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class UpdateUserResponseBodyError2Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_updateuserop.UpdateUserBadRequestExtra2] = UNSET


class UpdateUserResponseBodyError2(MammothAnalyticsError):
    r"""Validation Exception"""

    data: UpdateUserResponseBodyError2Data

    def __init__(
        self,
        data: UpdateUserResponseBodyError2Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class UpdateUserResponseBodyError1Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_updateuserop.UpdateUserBadRequestExtra1] = UNSET


class UpdateUserResponseBodyError1(MammothAnalyticsError):
    r"""Client Error"""

    data: UpdateUserResponseBodyError1Data

    def __init__(
        self,
        data: UpdateUserResponseBodyError1Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


UpdateUserBadRequestUnion = TypeAliasType(
    "UpdateUserBadRequestUnion",
    Union[UpdateUserResponseBodyError1Data, UpdateUserResponseBodyError2Data],
)
r"""Bad request syntax or unsupported method"""


class UpdateUserBadRequest(MammothAnalyticsError):
    r"""Bad request syntax or unsupported method"""

    data: UpdateUserBadRequestUnion

    def __init__(
        self,
        data: UpdateUserBadRequestUnion,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
