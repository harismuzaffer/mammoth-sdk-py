"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from mammoth_analytics.errors import MammothAnalyticsError
from mammoth_analytics.models import saveconnectionop as models_saveconnectionop
from mammoth_analytics.types import BaseModel, OptionalNullable, UNSET
from typing import Optional, Union
from typing_extensions import TypeAliasType


class SaveConnectionUnauthorizedErrorData(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_saveconnectionop.SaveConnectionUnauthorizedExtra] = (
        UNSET
    )


class SaveConnectionUnauthorizedError(MammothAnalyticsError):
    r"""Authorization Exception"""

    data: SaveConnectionUnauthorizedErrorData

    def __init__(
        self,
        data: SaveConnectionUnauthorizedErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class SaveConnectionResponseBodyError2Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_saveconnectionop.SaveConnectionBadRequestExtra2] = (
        UNSET
    )


class SaveConnectionResponseBodyError2(MammothAnalyticsError):
    r"""Validation Exception"""

    data: SaveConnectionResponseBodyError2Data

    def __init__(
        self,
        data: SaveConnectionResponseBodyError2Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class SaveConnectionResponseBodyError1Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_saveconnectionop.SaveConnectionBadRequestExtra1] = (
        UNSET
    )


class SaveConnectionResponseBodyError1(MammothAnalyticsError):
    r"""Client Error"""

    data: SaveConnectionResponseBodyError1Data

    def __init__(
        self,
        data: SaveConnectionResponseBodyError1Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


SaveConnectionBadRequestUnion = TypeAliasType(
    "SaveConnectionBadRequestUnion",
    Union[SaveConnectionResponseBodyError1Data, SaveConnectionResponseBodyError2Data],
)
r"""Bad request syntax or unsupported method"""


class SaveConnectionBadRequest(MammothAnalyticsError):
    r"""Bad request syntax or unsupported method"""

    data: SaveConnectionBadRequestUnion

    def __init__(
        self,
        data: SaveConnectionBadRequestUnion,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
