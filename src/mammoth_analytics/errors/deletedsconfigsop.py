"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from mammoth_analytics.errors import MammothAnalyticsError
from mammoth_analytics.models import deletedsconfigsop as models_deletedsconfigsop
from mammoth_analytics.types import BaseModel, OptionalNullable, UNSET
from typing import Optional, Union
from typing_extensions import TypeAliasType


class DeleteDsConfigsResponseBodyError2Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_deletedsconfigsop.DeleteDsConfigsExtra2] = UNSET


class DeleteDsConfigsResponseBodyError2(MammothAnalyticsError):
    r"""Validation Exception"""

    data: DeleteDsConfigsResponseBodyError2Data

    def __init__(
        self,
        data: DeleteDsConfigsResponseBodyError2Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class DeleteDsConfigsResponseBodyError1Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[models_deletedsconfigsop.DeleteDsConfigsExtra1] = UNSET


class DeleteDsConfigsResponseBodyError1(MammothAnalyticsError):
    r"""Client Error"""

    data: DeleteDsConfigsResponseBodyError1Data

    def __init__(
        self,
        data: DeleteDsConfigsResponseBodyError1Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


DeleteDsConfigsBadRequestUnion = TypeAliasType(
    "DeleteDsConfigsBadRequestUnion",
    Union[DeleteDsConfigsResponseBodyError1Data, DeleteDsConfigsResponseBodyError2Data],
)
r"""Bad request syntax or unsupported method"""


class DeleteDsConfigsBadRequest(MammothAnalyticsError):
    r"""Bad request syntax or unsupported method"""

    data: DeleteDsConfigsBadRequestUnion

    def __init__(
        self,
        data: DeleteDsConfigsBadRequestUnion,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
