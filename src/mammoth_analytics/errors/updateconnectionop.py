"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from mammoth_analytics.errors import MammothAnalyticsError
from mammoth_analytics.models import updateconnectionop as models_updateconnectionop
from mammoth_analytics.types import BaseModel, OptionalNullable, UNSET
from typing import Optional, Union
from typing_extensions import TypeAliasType


class UpdateConnectionUnauthorizedErrorData(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[
        models_updateconnectionop.UpdateConnectionUnauthorizedExtra
    ] = UNSET


class UpdateConnectionUnauthorizedError(MammothAnalyticsError):
    r"""Authorization Exception"""

    data: UpdateConnectionUnauthorizedErrorData

    def __init__(
        self,
        data: UpdateConnectionUnauthorizedErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class UpdateConnectionResponseBodyError2Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[
        models_updateconnectionop.UpdateConnectionBadRequestExtra2
    ] = UNSET


class UpdateConnectionResponseBodyError2(MammothAnalyticsError):
    r"""Validation Exception"""

    data: UpdateConnectionResponseBodyError2Data

    def __init__(
        self,
        data: UpdateConnectionResponseBodyError2Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class UpdateConnectionResponseBodyError1Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[
        models_updateconnectionop.UpdateConnectionBadRequestExtra1
    ] = UNSET


class UpdateConnectionResponseBodyError1(MammothAnalyticsError):
    r"""Client Error"""

    data: UpdateConnectionResponseBodyError1Data

    def __init__(
        self,
        data: UpdateConnectionResponseBodyError1Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


UpdateConnectionBadRequestUnion = TypeAliasType(
    "UpdateConnectionBadRequestUnion",
    Union[
        UpdateConnectionResponseBodyError1Data, UpdateConnectionResponseBodyError2Data
    ],
)
r"""Bad request syntax or unsupported method"""


class UpdateConnectionBadRequest(MammothAnalyticsError):
    r"""Bad request syntax or unsupported method"""

    data: UpdateConnectionBadRequestUnion

    def __init__(
        self,
        data: UpdateConnectionBadRequestUnion,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
