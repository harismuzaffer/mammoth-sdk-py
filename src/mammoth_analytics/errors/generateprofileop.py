"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from mammoth_analytics.errors import MammothAnalyticsError
from mammoth_analytics.models import generateprofileop as models_generateprofileop
from mammoth_analytics.types import BaseModel, OptionalNullable, UNSET
from typing import Optional, Union
from typing_extensions import TypeAliasType


class GenerateProfileUnauthorizedErrorData(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[
        models_generateprofileop.GenerateProfileUnauthorizedExtra
    ] = UNSET


class GenerateProfileUnauthorizedError(MammothAnalyticsError):
    r"""Authorization Exception"""

    data: GenerateProfileUnauthorizedErrorData

    def __init__(
        self,
        data: GenerateProfileUnauthorizedErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class GenerateProfileResponseBodyError2Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[
        models_generateprofileop.GenerateProfileBadRequestExtra2
    ] = UNSET


class GenerateProfileResponseBodyError2(MammothAnalyticsError):
    r"""Validation Exception"""

    data: GenerateProfileResponseBodyError2Data

    def __init__(
        self,
        data: GenerateProfileResponseBodyError2Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


class GenerateProfileResponseBodyError1Data(BaseModel):
    status_code: int

    detail: str

    extra: OptionalNullable[
        models_generateprofileop.GenerateProfileBadRequestExtra1
    ] = UNSET


class GenerateProfileResponseBodyError1(MammothAnalyticsError):
    r"""Client Error"""

    data: GenerateProfileResponseBodyError1Data

    def __init__(
        self,
        data: GenerateProfileResponseBodyError1Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data


GenerateProfileBadRequestUnion = TypeAliasType(
    "GenerateProfileBadRequestUnion",
    Union[GenerateProfileResponseBodyError1Data, GenerateProfileResponseBodyError2Data],
)
r"""Bad request syntax or unsupported method"""


class GenerateProfileBadRequest(MammothAnalyticsError):
    r"""Bad request syntax or unsupported method"""

    data: GenerateProfileBadRequestUnion

    def __init__(
        self,
        data: GenerateProfileBadRequestUnion,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
